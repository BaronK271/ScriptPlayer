{
  "errors": [],
  "warnings": [],
  "version": "2.6.1",
  "hash": "38b2b05e01a594dee7cd",
  "time": 1281,
  "publicPath": "",
  "assetsByChunkName": {
    "main": "./js/webbundle.js"
  },
  "assets": [
    {
      "name": "./js/webbundle.js",
      "size": 131572,
      "chunks": [
        0
      ],
      "chunkNames": [
        "main"
      ],
      "emitted": true
    }
  ],
  "entrypoints": {
    "main": {
      "chunks": [
        0
      ],
      "assets": [
        "./js/webbundle.js"
      ]
    }
  },
  "chunks": [
    {
      "id": 0,
      "rendered": true,
      "initial": true,
      "entry": true,
      "extraAsync": false,
      "size": 127499,
      "names": [
        "main"
      ],
      "files": [
        "./js/webbundle.js"
      ],
      "hash": "d5d40d4f549cec0528fb",
      "parents": [],
      "modules": [
        {
          "id": 0,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
          "name": "./~/buttplug/dist/main/src/index.js",
          "index": 1,
          "index2": 17,
          "size": 318,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
          "issuerId": 5,
          "issuerName": "./js/scriptplayer.js",
          "profile": {
            "factory": 8,
            "building": 16
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
              "module": "./js/scriptplayer.js",
              "moduleName": "./js/scriptplayer.js",
              "type": "cjs require",
              "userRequest": "buttplug",
              "loc": "4:19-38"
            },
            {
              "moduleId": 5,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
              "module": "./js/scriptplayer.js",
              "moduleName": "./js/scriptplayer.js",
              "type": "cjs require",
              "userRequest": "buttplug",
              "loc": "5:17-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 1,
          "source": "\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./core/client\"));\n__export(require(\"./core/messages\"));\n__export(require(\"./core/device\"));\n//# sourceMappingURL=index.js.map"
        },
        {
          "id": 1,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
          "name": "./~/buttplug/dist/main/src/core/messages.js",
          "index": 4,
          "index2": 14,
          "size": 11014,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
          "issuerId": 0,
          "issuerName": "./~/buttplug/dist/main/src/index.js",
          "profile": {
            "factory": 4,
            "building": 105
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
              "module": "./~/buttplug/dist/main/src/index.js",
              "moduleName": "./~/buttplug/dist/main/src/index.js",
              "type": "cjs require",
              "userRequest": "./core/messages",
              "loc": "8:9-35"
            },
            {
              "moduleId": 3,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\device.js",
              "module": "./~/buttplug/dist/main/src/core/device.js",
              "moduleName": "./~/buttplug/dist/main/src/core/device.js",
              "type": "cjs require",
              "userRequest": "./messages",
              "loc": "4:15-36"
            },
            {
              "moduleId": 6,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
              "module": "./~/buttplug/dist/main/src/core/client.js",
              "moduleName": "./~/buttplug/dist/main/src/core/client.js",
              "type": "cjs require",
              "userRequest": "./messages",
              "loc": "98:15-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 2,
          "source": "'use strict';\n\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nvar class_transformer_1 = require(\"class-transformer\");\nvar ButtplugMessage = function () {\n    function ButtplugMessage(Id) {\n        this.Id = Id;\n    }\n    ButtplugMessage.prototype.getType = function () {\n        return this.constructor.name;\n    };\n    ButtplugMessage.prototype.toJSON = function () {\n        var json_obj = {};\n        var instance = this.constructor;\n        json_obj[instance.name] = class_transformer_1.classToPlain(this);\n        return JSON.stringify(json_obj);\n    };\n    return ButtplugMessage;\n}();\nexports.ButtplugMessage = ButtplugMessage;\nvar ButtplugDeviceMessage = function (_super) {\n    __extends(ButtplugDeviceMessage, _super);\n    function ButtplugDeviceMessage(DeviceIndex, Id) {\n        var _this = _super.call(this, Id) || this;\n        _this.DeviceIndex = DeviceIndex;\n        _this.Id = Id;\n        return _this;\n    }\n    return ButtplugDeviceMessage;\n}(ButtplugMessage);\nexports.ButtplugDeviceMessage = ButtplugDeviceMessage;\nvar ButtplugSystemMessage = function (_super) {\n    __extends(ButtplugSystemMessage, _super);\n    function ButtplugSystemMessage(Id) {\n        if (Id === void 0) {\n            Id = 0;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return ButtplugSystemMessage;\n}(ButtplugMessage);\nexports.ButtplugSystemMessage = ButtplugSystemMessage;\nvar Ok = function (_super) {\n    __extends(Ok, _super);\n    function Ok(Id) {\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return Ok;\n}(ButtplugSystemMessage);\nexports.Ok = Ok;\nvar Ping = function (_super) {\n    __extends(Ping, _super);\n    function Ping(Id) {\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return Ping;\n}(ButtplugMessage);\nexports.Ping = Ping;\nvar Test = function (_super) {\n    __extends(Test, _super);\n    function Test(TestString, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.TestString = TestString;\n        _this.Id = Id;\n        return _this;\n    }\n    return Test;\n}(ButtplugMessage);\nexports.Test = Test;\nvar Error = function (_super) {\n    __extends(Error, _super);\n    function Error(ErrorMessage, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.ErrorMessage = ErrorMessage;\n        _this.Id = Id;\n        return _this;\n    }\n    return Error;\n}(ButtplugSystemMessage);\nexports.Error = Error;\nvar DeviceInfo = function () {\n    function DeviceInfo(DeviceIndex, DeviceName, DeviceMessages) {\n        this.DeviceIndex = DeviceIndex;\n        this.DeviceName = DeviceName;\n        this.DeviceMessages = DeviceMessages;\n    }\n    return DeviceInfo;\n}();\nexports.DeviceInfo = DeviceInfo;\nvar DeviceList = function (_super) {\n    __extends(DeviceList, _super);\n    function DeviceList(Devices, Id) {\n        var _this = _super.call(this) || this;\n        _this.Devices = Devices;\n        _this.Id = Id;\n        return _this;\n    }\n    return DeviceList;\n}(ButtplugSystemMessage);\nexports.DeviceList = DeviceList;\nvar DeviceAdded = function (_super) {\n    __extends(DeviceAdded, _super);\n    function DeviceAdded(DeviceIndex, DeviceName, DeviceMessages) {\n        var _this = _super.call(this) || this;\n        _this.DeviceIndex = DeviceIndex;\n        _this.DeviceName = DeviceName;\n        _this.DeviceMessages = DeviceMessages;\n        return _this;\n    }\n    return DeviceAdded;\n}(ButtplugSystemMessage);\nexports.DeviceAdded = DeviceAdded;\nvar DeviceRemoved = function (_super) {\n    __extends(DeviceRemoved, _super);\n    function DeviceRemoved(DeviceIndex) {\n        var _this = _super.call(this) || this;\n        _this.DeviceIndex = DeviceIndex;\n        return _this;\n    }\n    return DeviceRemoved;\n}(ButtplugSystemMessage);\nexports.DeviceRemoved = DeviceRemoved;\nvar RequestDeviceList = function (_super) {\n    __extends(RequestDeviceList, _super);\n    function RequestDeviceList(Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return RequestDeviceList;\n}(ButtplugMessage);\nexports.RequestDeviceList = RequestDeviceList;\nvar StartScanning = function (_super) {\n    __extends(StartScanning, _super);\n    function StartScanning(Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return StartScanning;\n}(ButtplugMessage);\nexports.StartScanning = StartScanning;\nvar StopScanning = function (_super) {\n    __extends(StopScanning, _super);\n    function StopScanning(Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return StopScanning;\n}(ButtplugMessage);\nexports.StopScanning = StopScanning;\nvar RequestLog = function (_super) {\n    __extends(RequestLog, _super);\n    function RequestLog(LogLevel, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.LogLevel = LogLevel;\n        _this.Id = Id;\n        return _this;\n    }\n    return RequestLog;\n}(ButtplugMessage);\nexports.RequestLog = RequestLog;\nvar Log = function (_super) {\n    __extends(Log, _super);\n    function Log(LogLevel, LogMessage) {\n        var _this = _super.call(this) || this;\n        _this.LogLevel = LogLevel;\n        _this.LogMessage = LogMessage;\n        return _this;\n    }\n    return Log;\n}(ButtplugSystemMessage);\nexports.Log = Log;\nvar RequestServerInfo = function (_super) {\n    __extends(RequestServerInfo, _super);\n    function RequestServerInfo(ClientName, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.ClientName = ClientName;\n        _this.Id = Id;\n        return _this;\n    }\n    return RequestServerInfo;\n}(ButtplugMessage);\nexports.RequestServerInfo = RequestServerInfo;\nvar ServerInfo = function (_super) {\n    __extends(ServerInfo, _super);\n    function ServerInfo(MajorVersion, MinorVersion, BuildVersion, MessageVersion, MaxPingTime, ServerName, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this) || this;\n        _this.MajorVersion = MajorVersion;\n        _this.MinorVersion = MinorVersion;\n        _this.BuildVersion = BuildVersion;\n        _this.MessageVersion = MessageVersion;\n        _this.MaxPingTime = MaxPingTime;\n        _this.ServerName = ServerName;\n        _this.Id = Id;\n        return _this;\n    }\n    return ServerInfo;\n}(ButtplugSystemMessage);\nexports.ServerInfo = ServerInfo;\nvar FleshlightLaunchRawCmd = function (_super) {\n    __extends(FleshlightLaunchRawCmd, _super);\n    function FleshlightLaunchRawCmd(Speed, Position, DeviceIndex, Id) {\n        if (DeviceIndex === void 0) {\n            DeviceIndex = -1;\n        }\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, DeviceIndex, Id) || this;\n        _this.Speed = Speed;\n        _this.Position = Position;\n        _this.DeviceIndex = DeviceIndex;\n        _this.Id = Id;\n        return _this;\n    }\n    return FleshlightLaunchRawCmd;\n}(ButtplugDeviceMessage);\nexports.FleshlightLaunchRawCmd = FleshlightLaunchRawCmd;\nvar KiirooRawCmd = function (_super) {\n    __extends(KiirooRawCmd, _super);\n    function KiirooRawCmd(Position, DeviceIndex, Id) {\n        if (DeviceIndex === void 0) {\n            DeviceIndex = -1;\n        }\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, DeviceIndex, Id) || this;\n        _this.Position = Position;\n        _this.DeviceIndex = DeviceIndex;\n        _this.Id = Id;\n        return _this;\n    }\n    return KiirooRawCmd;\n}(ButtplugDeviceMessage);\nexports.KiirooRawCmd = KiirooRawCmd;\nvar SingleMotorVibrateCmd = function (_super) {\n    __extends(SingleMotorVibrateCmd, _super);\n    function SingleMotorVibrateCmd(Speed, DeviceIndex, Id) {\n        if (DeviceIndex === void 0) {\n            DeviceIndex = -1;\n        }\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, DeviceIndex, Id) || this;\n        _this.Speed = Speed;\n        _this.DeviceIndex = DeviceIndex;\n        _this.Id = Id;\n        return _this;\n    }\n    return SingleMotorVibrateCmd;\n}(ButtplugDeviceMessage);\nexports.SingleMotorVibrateCmd = SingleMotorVibrateCmd;\nvar Messages = {\n    Ok: Ok,\n    Ping: Ping,\n    Test: Test,\n    Error: Error,\n    DeviceList: DeviceList,\n    DeviceAdded: DeviceAdded,\n    DeviceRemoved: DeviceRemoved,\n    RequestDeviceList: RequestDeviceList,\n    StartScanning: StartScanning,\n    StopScanning: StopScanning,\n    RequestLog: RequestLog,\n    Log: Log,\n    RequestServerInfo: RequestServerInfo,\n    ServerInfo: ServerInfo,\n    FleshlightLaunchRawCmd: FleshlightLaunchRawCmd,\n    KiirooRawCmd: KiirooRawCmd,\n    SingleMotorVibrateCmd: SingleMotorVibrateCmd\n};\nfunction FromJSON(str) {\n    // TODO We're assuming we'll always get valid json here. While it should pass\n    // through the schema parser first, it'd probably be good to make sure it\n    // deals with parse failures too.\n    var msgarray = JSON.parse(str);\n    var msgs = [];\n    for (var _i = 0, _a = Array.from(msgarray); _i < _a.length; _i++) {\n        var x = _a[_i];\n        // Can't get this to resolve nicely as a type, so just start from any and cast\n        // after. Not sure how to resolve plainToClass to a type since this is\n        // dynamic.\n        var msg = class_transformer_1.plainToClass(Messages[Object.getOwnPropertyNames(x)[0]], x[Object.getOwnPropertyNames(x)[0]]);\n        msgs.push(msg);\n    }\n    if (msgs.length == 0) {\n        // Backup in case the server sent us a single object outside of an array.\n        // Accoring to the schema, this should be illegal, so once schema checking\n        // is added this should become dead code.\n        var msg = class_transformer_1.plainToClass(Messages[Object.getOwnPropertyNames(msgarray)[0]], msgarray[Object.getOwnPropertyNames(msgarray)[0]]);\n        msgs.push(msg);\n    }\n    return msgs;\n}\nexports.FromJSON = FromJSON;\n//# sourceMappingURL=messages.js.map"
        },
        {
          "id": 2,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\ClassTransformer.js",
          "name": "./~/class-transformer/ClassTransformer.js",
          "index": 9,
          "index2": 7,
          "size": 2826,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
          "issuerId": 9,
          "issuerName": "./~/class-transformer/index.js",
          "profile": {
            "factory": 219,
            "building": 15
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
              "module": "./~/class-transformer/decorators.js",
              "moduleName": "./~/class-transformer/decorators.js",
              "type": "cjs require",
              "userRequest": "./ClassTransformer",
              "loc": "3:25-54"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
              "module": "./~/class-transformer/index.js",
              "moduleName": "./~/class-transformer/index.js",
              "type": "cjs require",
              "userRequest": "./ClassTransformer",
              "loc": "6:25-54"
            },
            {
              "moduleId": 9,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
              "module": "./~/class-transformer/index.js",
              "moduleName": "./~/class-transformer/index.js",
              "type": "cjs require",
              "userRequest": "./ClassTransformer",
              "loc": "7:25-54"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 4,
          "source": "\"use strict\";\n\nvar TransformOperationExecutor_1 = require(\"./TransformOperationExecutor\");\nvar ClassTransformer = function () {\n    function ClassTransformer() {}\n    ClassTransformer.prototype.classToPlain = function (object, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"classToPlain\", options || {});\n        return executor.transform(undefined, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.classToPlainFromExist = function (object, plainObject, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"classToPlain\", options || {});\n        return executor.transform(plainObject, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.plainToClass = function (cls, plain, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"plainToClass\", options || {});\n        return executor.transform(undefined, plain, cls, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.plainToClassFromExist = function (clsObject, plain, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"plainToClass\", options || {});\n        return executor.transform(clsObject, plain, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.classToClass = function (object, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"classToClass\", options || {});\n        return executor.transform(undefined, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.classToClassFromExist = function (object, fromObject, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"classToClass\", options || {});\n        return executor.transform(fromObject, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.serialize = function (object, options) {\n        return JSON.stringify(this.classToPlain(object, options));\n    };\n    /**\n     * Deserializes given JSON string to a object of the given class.\n     */\n    ClassTransformer.prototype.deserialize = function (cls, json, options) {\n        var jsonObject = JSON.parse(json);\n        return this.plainToClass(cls, jsonObject, options);\n    };\n    /**\n     * Deserializes given JSON string to an array of objects of the given class.\n     */\n    ClassTransformer.prototype.deserializeArray = function (cls, json, options) {\n        var jsonObject = JSON.parse(json);\n        return this.plainToClass(cls, jsonObject, options);\n    };\n    return ClassTransformer;\n}();\nexports.ClassTransformer = ClassTransformer;\n\n//# sourceMappingURL=ClassTransformer.js.map"
        },
        {
          "id": 3,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\device.js",
          "name": "./~/buttplug/dist/main/src/core/device.js",
          "index": 18,
          "index2": 15,
          "size": 1248,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
          "issuerId": 0,
          "issuerName": "./~/buttplug/dist/main/src/index.js",
          "profile": {
            "factory": 4,
            "building": 190,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
              "module": "./~/buttplug/dist/main/src/index.js",
              "moduleName": "./~/buttplug/dist/main/src/index.js",
              "type": "cjs require",
              "userRequest": "./core/device",
              "loc": "9:9-33"
            },
            {
              "moduleId": 6,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
              "module": "./~/buttplug/dist/main/src/core/client.js",
              "moduleName": "./~/buttplug/dist/main/src/core/client.js",
              "type": "cjs require",
              "userRequest": "./device",
              "loc": "99:15-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 2,
          "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Messages = require(\"./messages\");\nvar Device = function () {\n    function Device(_index, _name, _allowedMessages) {\n        this._index = _index;\n        this._name = _name;\n        this._allowedMessages = _allowedMessages;\n    }\n    Device.fromMsg = function (aMsg) {\n        return new Device(aMsg.DeviceIndex, aMsg.DeviceName, aMsg.DeviceMessages);\n    };\n    Object.defineProperty(Device.prototype, \"Name\", {\n        get: function () {\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"Index\", {\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"AllowedMessages\", {\n        get: function () {\n            return this._allowedMessages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Device.prototype.newMessage = function (allowedMsg) {\n        var msg = this._allowedMessages[allowedMsg];\n        return Messages[msg];\n    };\n    return Device;\n}();\nexports.Device = Device;\n//# sourceMappingURL=device.js.map"
        },
        {
          "id": 4,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\storage.js",
          "name": "./~/class-transformer/storage.js",
          "index": 11,
          "index2": 5,
          "size": 287,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "issuerId": 8,
          "issuerName": "./~/class-transformer/decorators.js",
          "profile": {
            "factory": 12,
            "building": 88
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\TransformOperationExecutor.js",
              "module": "./~/class-transformer/TransformOperationExecutor.js",
              "moduleName": "./~/class-transformer/TransformOperationExecutor.js",
              "type": "cjs require",
              "userRequest": "./storage",
              "loc": "3:16-36"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
              "module": "./~/class-transformer/decorators.js",
              "moduleName": "./~/class-transformer/decorators.js",
              "type": "cjs require",
              "userRequest": "./storage",
              "loc": "4:16-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 5,
          "source": "\"use strict\";\n\nvar MetadataStorage_1 = require(\"./metadata/MetadataStorage\");\n/**\n * Default metadata storage is used as singleton and can be used to storage all metadatas.\n */\nexports.defaultMetadataStorage = new MetadataStorage_1.MetadataStorage();\n\n//# sourceMappingURL=storage.js.map"
        },
        {
          "id": 5,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
          "name": "./js/scriptplayer.js",
          "index": 0,
          "index2": 18,
          "size": 6861,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "profile": {
            "factory": 20,
            "building": 576
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [],
          "usedExports": true,
          "providedExports": null,
          "depth": 0,
          "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buttplug_1 = require(\"buttplug\");\nconst Messages = require(\"buttplug\");\nclass DeviceHandler {\n    constructor(url, onready) {\n        this.devices = [];\n        this.setPosition = (position, speed) => {\n            if (this.devices.length === 0) return;\n            this.client.SendDeviceMessage(this.devices[0], new Messages.FleshlightLaunchRawCmd(speed, position));\n        };\n        this.client = new buttplug_1.ButtplugClient(\"ScriptPlayer.WebPlayer\");\n        this.client.Connect(url).then(result => {\n            console.log(\"Buttplug Client connected\");\n            console.log(result); // \"Stuff worked!\"\n            return this.client.StartScanning();\n        }, err => {\n            console.log(err); // Error: \"It broke\"\n        }).then(() => {\n            console.log(\"Requesting Device List\");\n            return this.client.RequestDeviceList();\n        }, err => {\n            console.log(err); // Error: \"It broke\"\n        }).then(() => {\n            this.devices = this.client.getDevices();\n            console.log(\"Device list fetched: \" + this.devices.length);\n            onready();\n        }, err => {\n            console.log(err); // Error: \"It broke\"\n        });\n    }\n}\nclass ScriptPlayer {\n    constructor(scriptLocation, video) {\n        this.url = \"http://localhost:6969\";\n        this.onDevicesReady = () => {\n            this.ui.deviceConnected();\n        };\n        this.handleFrameUpdate = () => {\n            window.requestAnimationFrame(() => {\n                if (this.script == null) return;\n                var timestamp = this.video.currentTime * 1000 - this.delay;\n                if (timestamp >= this.script.actions[this.checkpoint].at) {\n                    while (this.script.actions[this.checkpoint + 1].at <= timestamp && this.checkpoint < this.script.actions.length - 1) {\n                        this.checkpoint++;\n                    }\n                    if (this.checkpoint < this.script.actions.length - 1) {\n                        var tNow = this.script.actions[this.checkpoint].at;\n                        var tNext = this.script.actions[this.checkpoint + 1].at;\n                        var pNow = this.script.actions[this.checkpoint].pos;\n                        var pNext = this.script.actions[this.checkpoint + 1].pos;\n                        var speed = ScriptPlayer.predictSpeed(tNext - tNow, Math.abs(pNow - pNext));\n                        this.handl.setPosition(pNext, speed);\n                        this.checkpoint = this.checkpoint + 1;\n                    }\n                }\n                if (this.video.paused === false) {\n                    this.handleFrameUpdate();\n                }\n            });\n        };\n        this.jsonLoaded = response => {\n            var responseObject = JSON.parse(response);\n            this.script = responseObject;\n        };\n        this.loadJson = (scriptFile, callback) => {\n            var xobj = new XMLHttpRequest();\n            xobj.overrideMimeType(\"application/json\");\n            xobj.open(\"GET\", scriptFile, true);\n            xobj.onreadystatechange = () => {\n                if (xobj.readyState === 4 && xobj.status === 200) {\n                    callback(xobj.responseText);\n                }\n            };\n            xobj.send(null);\n        };\n        this.handl = new DeviceHandler(\"ws://localhost:12345/buttplug\", this.onDevicesReady);\n        this.checkpoint = 0;\n        this.video = video;\n        this.scriptFile = scriptLocation;\n        this.loadJson(this.scriptFile, this.jsonLoaded);\n        this.ui = new UiController(this.video);\n        this.delay = -0.1;\n        this.video.addEventListener(\"playing\", () => {\n            this.ui.scriptplayer.style.display = \"none\";\n            this.handleFrameUpdate();\n        }, false);\n        this.video.addEventListener(\"seeked\", ev => {\n            this.checkpoint = 9999999;\n            var currentTime = ev.target.currentTime * 1000 - this.delay;\n            this.checkpoint = this.findActionIndex(currentTime);\n        });\n    }\n    findActionIndex(time) {\n        if (this.script == null) return 0;\n        for (var i = 0; i < this.script.actions.length; i++) {\n            if (this.script.actions[i].at >= time) return i;\n        }\n        return this.script.actions.length;\n    }\n}\nScriptPlayer.predictSpeed = (time, range) => {\n    var fullLengthsPerSecond = 6.0;\n    var turnaroundDelay = 0.02; // 0.05;\n    var relativeLength = range / 99.0;\n    var durationAtFullSpeed = turnaroundDelay + relativeLength / fullLengthsPerSecond;\n    var requiredSpeed = durationAtFullSpeed / time;\n    var actualSpeed = ScriptPlayer.clampSpeed(requiredSpeed * 99.0);\n    return actualSpeed;\n};\nScriptPlayer.clampSpeed = speed => {\n    return Math.min(99, Math.max(0, Math.round(speed)));\n};\nexports.ScriptPlayer = ScriptPlayer;\nclass UiController {\n    constructor(video) {\n        this.deviceConnected = () => {\n            this.status.classList.remove(\"device-not-connected\");\n            this.status.classList.add(\"device-connected\");\n            this.title.style.display = \"none\";\n            this.scriptplayerbutton.style.display = \"block\";\n            this.playbutton.onclick = () => {\n                this.status.classList.add(\"on-video\");\n                this.video.controls = true;\n                this.video.play();\n                //fullscreen\n                //if (this.video.requestFullscreen) {\n                //    this.video.requestFullscreen();\n                //}       \n            };\n        };\n        this.onDeviceDisconnected = () => {\n            this.title.innerHTML = \"Searching for device, please wait...\";\n            this.title.style.display = \"block\";\n            this.title.style.display = \"none\";\n            this.video.controls = false;\n            this.video.pause();\n            this.status.classList.remove(\"on-video\");\n            this.scriptplayer.style.display = \"block\";\n        };\n        this.onDeviceNotLaunched = () => {\n            this.title.innerHTML = 'Please, start your application';\n            this.title.style.display = \"block\";\n            this.scriptplayerbutton.style.display = \"none\";\n            this.video.controls = false;\n            this.video.pause();\n            this.status.classList.remove(\"on-video\");\n            this.scriptplayer.style.display = \"block\";\n        };\n        this.video = video;\n        this.status = document.getElementById(\"connection-status\");\n        this.title = document.getElementById(\"scriptplayer-title\");\n        this.scriptplayerbutton = document.getElementById(\"scriptplayer-button\");\n        this.playbutton = document.getElementById(\"scriptplayer-play\");\n        this.scriptplayer = document.getElementById(\"scriptplayer\");\n        this.onDeviceNotLaunched();\n    }\n}\n//# sourceMappingURL=scriptplayer.js.map"
        },
        {
          "id": 6,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
          "name": "./~/buttplug/dist/main/src/core/client.js",
          "index": 2,
          "index2": 16,
          "size": 14146,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
          "issuerId": 0,
          "issuerName": "./~/buttplug/dist/main/src/index.js",
          "profile": {
            "factory": 4,
            "building": 175,
            "dependencies": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
              "module": "./~/buttplug/dist/main/src/index.js",
              "moduleName": "./~/buttplug/dist/main/src/index.js",
              "type": "cjs require",
              "userRequest": "./core/client",
              "loc": "7:9-33"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 2,
          "source": "'use strict';\n\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : new P(function (resolve) {\n                resolve(result.value);\n            }).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n    var _ = { label: 0, sent: function () {\n            if (t[0] & 1) throw t[1];return t[1];\n        }, trys: [], ops: [] },\n        f,\n        y,\n        t,\n        g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n        return this;\n    }), g;\n    function verb(n) {\n        return function (v) {\n            return step([n, v]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0:case 1:\n                    t = op;break;\n                case 4:\n                    _.label++;return { value: op[1], done: false };\n                case 5:\n                    _.label++;y = op[1];op = [0];continue;\n                case 7:\n                    op = _.ops.pop();_.trys.pop();continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];t = op;break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];_.ops.push(op);break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [6, e];y = 0;\n        } finally {\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"events\");\nvar Messages = require(\"./messages\");\nvar device_1 = require(\"./device\");\nvar ButtplugClient = function (_super) {\n    __extends(ButtplugClient, _super);\n    function ButtplugClient(aClientName) {\n        var _this = _super.call(this) || this;\n        _this._devices = new Map();\n        _this._counter = 1;\n        _this._waitingMsgs = new Map();\n        _this.Connect = function (aUrl) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var _this = this;\n                var res, rej, p;\n                return __generator(this, function (_a) {\n                    this._ws = new WebSocket(aUrl);\n                    this._ws.addEventListener('message', function (ev) {\n                        _this.ParseIncomingMessage(ev);\n                    });\n                    p = new Promise(function (resolve, reject) {\n                        res = resolve;rej = reject;\n                    });\n                    this._ws.addEventListener('open', function (ev) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                            var msg;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        return [4 /*yield*/, this.SendMessage(new Messages.RequestServerInfo(this._clientName))];\n                                    case 1:\n                                        msg = _a.sent();\n                                        switch (msg.getType()) {\n                                            case 'ServerInfo':\n                                                // TODO: Actually deal with ping timing, maybe store server name, do\n                                                // something with message template version?\n                                                res();\n                                                break;\n                                            case 'Error':\n                                                rej();\n                                                break;\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        });\n                    });\n                    this._ws.addEventListener('close', function (ev) {\n                        rej(ev);\n                    });\n                    return [2 /*return*/, p];\n                });\n            });\n        };\n        _this.SendMsgExpectOk = function (aMsg) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var res, rej, msg, p;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMessage(aMsg)];\n                        case 1:\n                            msg = _a.sent();\n                            p = new Promise(function (resolve, reject) {\n                                res = resolve;rej = reject;\n                            });\n                            switch (msg.getType()) {\n                                case 'Ok':\n                                    res();\n                                    break;\n                                default:\n                                    rej();\n                                    break;\n                            }\n                            return [2 /*return*/, p];\n                    }\n                });\n            });\n        };\n        _this.RequestDeviceList = function () {\n            return __awaiter(_this, void 0, void 0, function () {\n                var _this = this;\n                var deviceList;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMessage(new Messages.RequestDeviceList())];\n                        case 1:\n                            deviceList = _a.sent();\n                            deviceList.Devices.forEach(function (d) {\n                                if (!_this._devices.has(d.DeviceIndex)) {\n                                    var device = device_1.Device.fromMsg(d);\n                                    _this._devices.set(d.DeviceIndex, device);\n                                    _this.emit('deviceadded', device);\n                                }\n                            });\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        _this.StartScanning = function () {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMsgExpectOk(new Messages.StartScanning())];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        _this.StopScanning = function () {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMsgExpectOk(new Messages.StopScanning())];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        _this.RequestLog = function (aLogLevel) {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMsgExpectOk(new Messages.RequestLog(aLogLevel))];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        _this.ParseJSONMessage = function (aJSONMsg) {\n            var msgs = Messages.FromJSON(aJSONMsg);\n            msgs.forEach(function (x) {\n                if (x.Id > 0 && _this._waitingMsgs.has(x.Id)) {\n                    var res = _this._waitingMsgs.get(x.Id);\n                    // We already checked for this via has, but typescript is bitching if I\n                    // don't do it again.\n                    if (res === undefined) {\n                        return;\n                    }\n                    res(x);\n                    return;\n                }\n                switch (x.constructor.name) {\n                    case 'Log':\n                        _this.emit('log', x);\n                        break;\n                    case 'DeviceAdded':\n                        var added_msg = x;\n                        var d = device_1.Device.fromMsg(added_msg);\n                        _this._devices.set(added_msg.DeviceIndex, d);\n                        _this.emit('deviceadded', d);\n                        break;\n                    case 'DeviceRemoved':\n                        var removed_msg = x;\n                        if (_this._devices.has(removed_msg.DeviceIndex)) {\n                            var d_1 = _this._devices.get(removed_msg.DeviceIndex);\n                            _this._devices.delete(removed_msg.DeviceIndex);\n                            _this.emit('deviceremoved', d_1);\n                        }\n                        break;\n                }\n                ;\n            });\n        };\n        _this.ParseIncomingMessage = function (aEvent) {\n            if (typeof aEvent.data === 'string') {\n                _this.ParseJSONMessage(aEvent.data);\n            } else if (aEvent.data instanceof Blob) {\n                var reader = new FileReader();\n                reader.addEventListener('load', function (ev) {\n                    _this.OnReaderLoad(ev);\n                });\n                reader.readAsText(aEvent.data);\n            }\n        };\n        _this._clientName = aClientName;\n        return _this;\n    }\n    ButtplugClient.prototype.SendMessage = function (aMsg) {\n        return __awaiter(this, void 0, void 0, function () {\n            var res, msgPromise;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        aMsg.Id = this._counter;\n                        msgPromise = new Promise(function (resolve) {\n                            res = resolve;\n                        });\n                        this._waitingMsgs.set(this._counter, res);\n                        this._counter += 1;\n                        this._ws.send(\"[\" + aMsg.toJSON() + \"]\");\n                        return [4 /*yield*/, msgPromise];\n                    case 1:\n                        return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ButtplugClient.prototype.getDevices = function () {\n        var devices = [];\n        this._devices.forEach(function (d, i) {\n            devices.push(d);\n        });\n        return devices;\n    };\n    ButtplugClient.prototype.OnReaderLoad = function (aEvent) {\n        this.ParseJSONMessage(aEvent.target.result);\n    };\n    ButtplugClient.prototype.SendDeviceMessage = function (aDevice, aDeviceMsg) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dev;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        dev = this._devices.get(aDevice.Index);\n                        if (dev === undefined) {\n                            return [2 /*return*/, Promise.reject(new Error(\"Device not available.\"))];\n                        }\n                        if (dev.AllowedMessages.indexOf(aDeviceMsg.getType()) == -1) {\n                            return [2 /*return*/, Promise.reject(new Error(\"Device does not accept that message type.\"))];\n                        }\n                        aDeviceMsg.DeviceIndex = aDevice.Index;\n                        return [4 /*yield*/, this.SendMsgExpectOk(aDeviceMsg)];\n                    case 1:\n                        return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return ButtplugClient;\n}(events_1.EventEmitter);\nexports.ButtplugClient = ButtplugClient;\n//# sourceMappingURL=client.js.map"
        },
        {
          "id": 7,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\TransformOperationExecutor.js",
          "name": "./~/class-transformer/TransformOperationExecutor.js",
          "index": 10,
          "index2": 6,
          "size": 14900,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\ClassTransformer.js",
          "issuerId": 2,
          "issuerName": "./~/class-transformer/ClassTransformer.js",
          "profile": {
            "factory": 35,
            "building": 84,
            "dependencies": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\ClassTransformer.js",
              "module": "./~/class-transformer/ClassTransformer.js",
              "moduleName": "./~/class-transformer/ClassTransformer.js",
              "type": "cjs require",
              "userRequest": "./TransformOperationExecutor",
              "loc": "3:35-74"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 5,
          "source": "\"use strict\";\n\nvar storage_1 = require(\"./storage\");\nvar TransformOperationExecutor = function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TransformOperationExecutor(transformationType, options) {\n        this.transformationType = transformationType;\n        this.options = options;\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        this.transformedTypes = [];\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    TransformOperationExecutor.prototype.transform = function (source, value, targetType, arrayType, isMap, level) {\n        var _this = this;\n        if (level === void 0) {\n            level = 0;\n        }\n        if (value instanceof Array || value instanceof Set) {\n            var newValue_1 = arrayType && this.transformationType === \"plainToClass\" ? new arrayType() : [];\n            value.forEach(function (subValue, index) {\n                var subSource = source ? source[index] : undefined;\n                if (!_this.isCircular(subValue, level)) {\n                    var value_1 = _this.transform(subSource, subValue, targetType, undefined, subValue instanceof Map, level + 1);\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(value_1);\n                    } else {\n                        newValue_1.push(value_1);\n                    }\n                } else if (_this.transformationType === \"classToClass\") {\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(subValue);\n                    } else {\n                        newValue_1.push(subValue);\n                    }\n                }\n            });\n            return newValue_1;\n        } else if (targetType === String && !isMap) {\n            return String(value);\n        } else if (targetType === Number && !isMap) {\n            return Number(value);\n        } else if (targetType === Boolean && !isMap) {\n            return Boolean(value);\n        } else if ((targetType === Date || value instanceof Date) && !isMap) {\n            if (value instanceof Date) {\n                return new Date(value.valueOf());\n            }\n            if (value === null || value === undefined) return value;\n            return new Date(value);\n        } else if (value instanceof Object) {\n            // try to guess the type\n            if (!targetType && value.constructor !== Object /* && operationType === \"classToPlain\"*/) targetType = value.constructor;\n            if (!targetType && source) targetType = source.constructor;\n            // add transformed type to prevent circular references\n            this.transformedTypes.push({ level: level, object: value });\n            var keys = this.getKeys(targetType, value);\n            var newValue = source ? source : {};\n            if (!source && (this.transformationType === \"plainToClass\" || this.transformationType === \"classToClass\")) {\n                if (isMap) {\n                    newValue = new Map();\n                } else if (targetType) {\n                    newValue = new targetType();\n                } else {\n                    newValue = {};\n                }\n            }\n            // traverse over keys\n            var _loop_1 = function (key) {\n                var valueKey = key,\n                    newValueKey = key,\n                    propertyName = key;\n                if (!this_1.options.ignoreDecorators && targetType) {\n                    if (this_1.transformationType === \"plainToClass\") {\n                        var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadataByCustomName(targetType, key);\n                        if (exposeMetadata) {\n                            propertyName = exposeMetadata.propertyName;\n                            newValueKey = exposeMetadata.propertyName;\n                        }\n                    } else if (this_1.transformationType === \"classToPlain\" || this_1.transformationType === \"classToClass\") {\n                        var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(targetType, key);\n                        if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) newValueKey = exposeMetadata.options.name;\n                    }\n                }\n                // get a subvalue\n                var subValue = undefined;\n                if (value instanceof Map) {\n                    subValue = value.get(valueKey);\n                } else if (value[valueKey] instanceof Function) {\n                    subValue = value[valueKey]();\n                } else {\n                    subValue = value[valueKey];\n                }\n                // determine a type\n                var type = undefined,\n                    isSubValueMap = subValue instanceof Map;\n                if (targetType && isMap) {\n                    type = targetType;\n                } else if (targetType) {\n                    var metadata = storage_1.defaultMetadataStorage.findTypeMetadata(targetType, propertyName);\n                    if (metadata) {\n                        var options = { newObject: newValue, object: value, property: propertyName };\n                        type = metadata.typeFunction(options);\n                        isSubValueMap = isSubValueMap || metadata.reflectedType === Map;\n                    } else if (this_1.options.targetMaps) {\n                        this_1.options.targetMaps.filter(function (map) {\n                            return map.target === targetType && !!map.properties[propertyName];\n                        }).forEach(function (map) {\n                            return type = map.properties[propertyName];\n                        });\n                    }\n                }\n                // if value is an array try to get its custom array type\n                var arrayType_1 = value[valueKey] instanceof Array ? this_1.getReflectedType(targetType, propertyName) : undefined;\n                // const subValueKey = operationType === \"plainToClass\" && newKeyName ? newKeyName : key;\n                var subSource = source ? source[valueKey] : undefined;\n                // if its deserialization then type if required\n                // if we uncomment this types like string[] will not work\n                // if (this.transformationType === \"plainToClass\" && !type && subValue instanceof Object && !(subValue instanceof Date))\n                //     throw new Error(`Cannot determine type for ${(targetType as any).name }.${propertyName}, did you forget to specify a @Type?`);\n                // if newValue is a source object that has method that match newKeyName then skip it\n                if (newValue.constructor.prototype) {\n                    var descriptor = Object.getOwnPropertyDescriptor(newValue.constructor.prototype, newValueKey);\n                    if ((this_1.transformationType === \"plainToClass\" || this_1.transformationType === \"classToClass\") && (newValue[newValueKey] instanceof Function || descriptor && !descriptor.set)) return \"continue\";\n                }\n                if (!this_1.isCircular(subValue, level)) {\n                    var transformKey = this_1.transformationType === \"plainToClass\" ? newValueKey : key;\n                    var finalValue = this_1.transform(subSource, subValue, type, arrayType_1, isSubValueMap, level + 1);\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, transformKey);\n                    if (newValue instanceof Map) {\n                        newValue.set(newValueKey, finalValue);\n                    } else {\n                        newValue[newValueKey] = finalValue;\n                    }\n                } else if (this_1.transformationType === \"classToClass\") {\n                    var finalValue = subValue;\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, key);\n                    if (newValue instanceof Map) {\n                        newValue.set(newValueKey, finalValue);\n                    } else {\n                        newValue[newValueKey] = finalValue;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                _loop_1(key);\n            }\n            return newValue;\n        } else {\n            return value;\n        }\n    };\n    TransformOperationExecutor.prototype.applyCustomTransformations = function (value, target, key) {\n        var _this = this;\n        var metadatas = storage_1.defaultMetadataStorage.findTransformMetadatas(target, key, this.transformationType);\n        // apply versioning options\n        if (this.options.version !== undefined) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options) return true;\n                return _this.checkVersion(metadata.options.since, metadata.options.until);\n            });\n        }\n        // apply grouping options\n        if (this.options.groups && this.options.groups.length) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options) return true;\n                return _this.checkGroups(metadata.options.groups);\n            });\n        } else {\n            metadatas = metadatas.filter(function (metadata) {\n                return !metadata.options || !metadata.options.groups || !metadata.options.groups.length;\n            });\n        }\n        metadatas.forEach(function (metadata) {\n            value = metadata.transformFn(value);\n        });\n        return value;\n    };\n    // preventing circular references\n    TransformOperationExecutor.prototype.isCircular = function (object, level) {\n        return !!this.transformedTypes.find(function (transformed) {\n            return transformed.object === object && transformed.level < level;\n        });\n    };\n    TransformOperationExecutor.prototype.getReflectedType = function (target, propertyName) {\n        if (!target) return undefined;\n        var meta = storage_1.defaultMetadataStorage.findTypeMetadata(target, propertyName);\n        return meta ? meta.reflectedType : undefined;\n    };\n    TransformOperationExecutor.prototype.getKeys = function (target, object) {\n        var _this = this;\n        // determine exclusion strategy\n        var strategy = storage_1.defaultMetadataStorage.getStrategy(target);\n        if (strategy === \"none\") strategy = this.options.strategy || \"exposeAll\"; // exposeAll is default strategy\n        // get all keys that need to expose\n        var keys = [];\n        if (strategy === \"exposeAll\") {\n            if (object instanceof Map) {\n                keys = Array.from(object.keys());\n            } else {\n                keys = Object.keys(object);\n            }\n        }\n        if (!this.options.ignoreDecorators && target) {\n            // add all exposed to list of keys\n            var exposedProperties = storage_1.defaultMetadataStorage.getExposedProperties(target, this.transformationType);\n            if (this.transformationType === \"plainToClass\") {\n                exposedProperties = exposedProperties.map(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) {\n                        return exposeMetadata.options.name;\n                    }\n                    return key;\n                });\n            }\n            keys = keys.concat(exposedProperties);\n            // exclude excluded properties\n            var excludedProperties_1 = storage_1.defaultMetadataStorage.getExcludedProperties(target, this.transformationType);\n            if (excludedProperties_1.length > 0) {\n                keys = keys.filter(function (key) {\n                    return excludedProperties_1.indexOf(key) === -1;\n                });\n            }\n            // apply versioning options\n            if (this.options.version !== undefined) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options) return true;\n                    return _this.checkVersion(exposeMetadata.options.since, exposeMetadata.options.until);\n                });\n            }\n            // apply grouping options\n            if (this.options.groups && this.options.groups.length) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options) return true;\n                    return _this.checkGroups(exposeMetadata.options.groups);\n                });\n            } else {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    return !exposeMetadata || !exposeMetadata.options || !exposeMetadata.options.groups || !exposeMetadata.options.groups.length;\n                });\n            }\n        }\n        // exclude prefixed properties\n        if (this.options.excludePrefixes && this.options.excludePrefixes.length) {\n            keys = keys.filter(function (key) {\n                return _this.options.excludePrefixes.every(function (prefix) {\n                    return key.substr(0, prefix.length) !== prefix;\n                });\n            });\n        }\n        // make sure we have unique keys\n        keys = keys.filter(function (key, index, self) {\n            return self.indexOf(key) === index;\n        });\n        return keys;\n    };\n    TransformOperationExecutor.prototype.checkVersion = function (since, until) {\n        var decision = true;\n        if (decision && since) decision = this.options.version >= since;\n        if (decision && until) decision = this.options.version < until;\n        return decision;\n    };\n    TransformOperationExecutor.prototype.checkGroups = function (groups) {\n        if (!groups) return true;\n        return this.options.groups.some(function (optionGroup) {\n            return groups.indexOf(optionGroup) !== -1;\n        });\n    };\n    return TransformOperationExecutor;\n}();\nexports.TransformOperationExecutor = TransformOperationExecutor;\n\n//# sourceMappingURL=TransformOperationExecutor.js.map"
        },
        {
          "id": 8,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "name": "./~/class-transformer/decorators.js",
          "index": 13,
          "index2": 12,
          "size": 4254,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
          "issuerId": 9,
          "issuerName": "./~/class-transformer/index.js",
          "profile": {
            "factory": 220,
            "building": 37,
            "dependencies": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
              "module": "./~/class-transformer/index.js",
              "moduleName": "./~/class-transformer/index.js",
              "type": "cjs require",
              "userRequest": "./decorators",
              "loc": "9:9-32"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 4,
          "source": "\"use strict\";\n\nvar ClassTransformer_1 = require(\"./ClassTransformer\");\nvar storage_1 = require(\"./storage\");\nvar TypeMetadata_1 = require(\"./metadata/TypeMetadata\");\nvar ExposeMetadata_1 = require(\"./metadata/ExposeMetadata\");\nvar ExcludeMetadata_1 = require(\"./metadata/ExcludeMetadata\");\nvar TransformMetadata_1 = require(\"./metadata/TransformMetadata\");\n/**\n * Defines a custom logic for value transformation.\n */\nfunction Transform(transformFn, options) {\n    return function (target, key) {\n        var metadata = new TransformMetadata_1.TransformMetadata(target.constructor, key, transformFn, options);\n        storage_1.defaultMetadataStorage.addTransformMetadata(metadata);\n    };\n}\nexports.Transform = Transform;\n/**\n * Specifies a type of the property.\n */\nfunction Type(typeFunction) {\n    return function (target, key) {\n        var type = Reflect.getMetadata(\"design:type\", target, key);\n        var metadata = new TypeMetadata_1.TypeMetadata(target.constructor, key, type, typeFunction);\n        storage_1.defaultMetadataStorage.addTypeMetadata(metadata);\n    };\n}\nexports.Type = Type;\n/**\n * Marks property as included in the process of transformation. By default it includes the property for both\n * constructorToPlain and plainToConstructor transformations, however you can specify on which of transformation types\n * you want to skip this property.\n */\nfunction Expose(options) {\n    return function (object, propertyName) {\n        var metadata = new ExposeMetadata_1.ExposeMetadata(object instanceof Function ? object : object.constructor, propertyName, options || {});\n        storage_1.defaultMetadataStorage.addExposeMetadata(metadata);\n    };\n}\nexports.Expose = Expose;\n/**\n * Marks property as excluded from the process of transformation. By default it excludes the property for both\n * constructorToPlain and plainToConstructor transformations, however you can specify on which of transformation types\n * you want to skip this property.\n */\nfunction Exclude(options) {\n    return function (object, propertyName) {\n        var metadata = new ExcludeMetadata_1.ExcludeMetadata(object instanceof Function ? object : object.constructor, propertyName, options || {});\n        storage_1.defaultMetadataStorage.addExcludeMetadata(metadata);\n    };\n}\nexports.Exclude = Exclude;\n/**\n * Transform the object from class to plain object and return only with the exposed properties.\n */\nfunction TransformClassToPlain(params) {\n    return function (target, propertyKey, descriptor) {\n        var classTransformer = new ClassTransformer_1.ClassTransformer();\n        var originalMethod = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = originalMethod.apply(this, args);\n            var isPromise = !!result && (typeof result === \"object\" || typeof result === \"function\") && typeof result.then === \"function\";\n            return isPromise ? result.then(function (data) {\n                return classTransformer.classToPlain(data, params);\n            }) : classTransformer.classToPlain(result, params);\n        };\n    };\n}\nexports.TransformClassToPlain = TransformClassToPlain;\n/**\n * Return the class instance only with the exposed properties.\n */\nfunction TransformClassToClass(params) {\n    return function (target, propertyKey, descriptor) {\n        var classTransformer = new ClassTransformer_1.ClassTransformer();\n        var originalMethod = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = originalMethod.apply(this, args);\n            var isPromise = !!result && (typeof result === \"object\" || typeof result === \"function\") && typeof result.then === \"function\";\n            return isPromise ? result.then(function (data) {\n                return classTransformer.classToClass(data, params);\n            }) : classTransformer.classToClass(result, params);\n        };\n    };\n}\nexports.TransformClassToClass = TransformClassToClass;\n\n//# sourceMappingURL=decorators.js.map"
        },
        {
          "id": 9,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
          "name": "./~/class-transformer/index.js",
          "index": 8,
          "index2": 13,
          "size": 2031,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
          "issuerId": 1,
          "issuerName": "./~/buttplug/dist/main/src/core/messages.js",
          "profile": {
            "factory": 94,
            "building": 17
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 1,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
              "module": "./~/buttplug/dist/main/src/core/messages.js",
              "moduleName": "./~/buttplug/dist/main/src/core/messages.js",
              "type": "cjs require",
              "userRequest": "class-transformer",
              "loc": "19:26-54"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 3,
          "source": "\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar ClassTransformer_1 = require(\"./ClassTransformer\");\nvar ClassTransformer_2 = require(\"./ClassTransformer\");\nexports.ClassTransformer = ClassTransformer_2.ClassTransformer;\n__export(require(\"./decorators\"));\nvar classTransformer = new ClassTransformer_1.ClassTransformer();\nfunction classToPlain(object, options) {\n    return classTransformer.classToPlain(object, options);\n}\nexports.classToPlain = classToPlain;\nfunction classToPlainFromExist(object, plainObject, options) {\n    return classTransformer.classToPlainFromExist(object, plainObject, options);\n}\nexports.classToPlainFromExist = classToPlainFromExist;\nfunction plainToClass(cls, plain, options) {\n    return classTransformer.plainToClass(cls, plain, options);\n}\nexports.plainToClass = plainToClass;\nfunction plainToClassFromExist(clsObject, plain, options) {\n    return classTransformer.plainToClassFromExist(clsObject, plain, options);\n}\nexports.plainToClassFromExist = plainToClassFromExist;\nfunction classToClass(object, options) {\n    return classTransformer.classToClass(object, options);\n}\nexports.classToClass = classToClass;\nfunction classToClassFromExist(object, fromObject, options) {\n    return classTransformer.classToClassFromExist(object, fromObject, options);\n}\nexports.classToClassFromExist = classToClassFromExist;\nfunction serialize(object, options) {\n    return classTransformer.serialize(object, options);\n}\nexports.serialize = serialize;\n/**\n * Deserializes given JSON string to a object of the given class.\n */\nfunction deserialize(cls, json, options) {\n    return classTransformer.deserialize(cls, json, options);\n}\nexports.deserialize = deserialize;\n/**\n * Deserializes given JSON string to an array of objects of the given class.\n */\nfunction deserializeArray(cls, json, options) {\n    return classTransformer.deserializeArray(cls, json, options);\n}\nexports.deserializeArray = deserializeArray;\n\n//# sourceMappingURL=index.js.map"
        },
        {
          "id": 10,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\ExcludeMetadata.js",
          "name": "./~/class-transformer/metadata/ExcludeMetadata.js",
          "index": 16,
          "index2": 10,
          "size": 343,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "issuerId": 8,
          "issuerName": "./~/class-transformer/decorators.js",
          "profile": {
            "factory": 16,
            "building": 88
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
              "module": "./~/class-transformer/decorators.js",
              "moduleName": "./~/class-transformer/decorators.js",
              "type": "cjs require",
              "userRequest": "./metadata/ExcludeMetadata",
              "loc": "7:24-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 5,
          "source": "\"use strict\";\n\nvar ExcludeMetadata = function () {\n    function ExcludeMetadata(target, propertyName, options) {\n        this.target = target;\n        this.propertyName = propertyName;\n        this.options = options;\n    }\n    return ExcludeMetadata;\n}();\nexports.ExcludeMetadata = ExcludeMetadata;\n\n//# sourceMappingURL=ExcludeMetadata.js.map"
        },
        {
          "id": 11,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\ExposeMetadata.js",
          "name": "./~/class-transformer/metadata/ExposeMetadata.js",
          "index": 15,
          "index2": 9,
          "size": 337,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "issuerId": 8,
          "issuerName": "./~/class-transformer/decorators.js",
          "profile": {
            "factory": 16,
            "building": 93
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
              "module": "./~/class-transformer/decorators.js",
              "moduleName": "./~/class-transformer/decorators.js",
              "type": "cjs require",
              "userRequest": "./metadata/ExposeMetadata",
              "loc": "6:23-59"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 5,
          "source": "\"use strict\";\n\nvar ExposeMetadata = function () {\n    function ExposeMetadata(target, propertyName, options) {\n        this.target = target;\n        this.propertyName = propertyName;\n        this.options = options;\n    }\n    return ExposeMetadata;\n}();\nexports.ExposeMetadata = ExposeMetadata;\n\n//# sourceMappingURL=ExposeMetadata.js.map"
        },
        {
          "id": 12,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\MetadataStorage.js",
          "name": "./~/class-transformer/metadata/MetadataStorage.js",
          "index": 12,
          "index2": 4,
          "size": 7155,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\storage.js",
          "issuerId": 4,
          "issuerName": "./~/class-transformer/storage.js",
          "profile": {
            "factory": 19,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\storage.js",
              "module": "./~/class-transformer/storage.js",
              "moduleName": "./~/class-transformer/storage.js",
              "type": "cjs require",
              "userRequest": "./metadata/MetadataStorage",
              "loc": "3:24-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 6,
          "source": "\"use strict\";\n/**\n * Storage all library metadata.\n */\n\nvar MetadataStorage = function () {\n    function MetadataStorage() {\n        // -------------------------------------------------------------------------\n        // Properties\n        // -------------------------------------------------------------------------\n        this._typeMetadatas = [];\n        this._transformMetadatas = [];\n        this._exposeMetadatas = [];\n        this._excludeMetadatas = [];\n    }\n    // -------------------------------------------------------------------------\n    // Adder Methods\n    // -------------------------------------------------------------------------\n    MetadataStorage.prototype.addTypeMetadata = function (metadata) {\n        this._typeMetadatas.push(metadata);\n    };\n    MetadataStorage.prototype.addTransformMetadata = function (metadata) {\n        this._transformMetadatas.push(metadata);\n    };\n    MetadataStorage.prototype.addExposeMetadata = function (metadata) {\n        this._exposeMetadatas.push(metadata);\n    };\n    MetadataStorage.prototype.addExcludeMetadata = function (metadata) {\n        this._excludeMetadatas.push(metadata);\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    MetadataStorage.prototype.findTransformMetadatas = function (target, propertyName, transformationType) {\n        return this.findMetadatas(this._transformMetadatas, target, propertyName).filter(function (metadata) {\n            if (!metadata.options) return true;\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true) return true;\n            if (metadata.options.toClassOnly === true) {\n                return transformationType === \"classToClass\" || transformationType === \"plainToClass\";\n            }\n            if (metadata.options.toPlainOnly === true) {\n                return transformationType === \"classToPlain\";\n            }\n            return true;\n        });\n    };\n    MetadataStorage.prototype.findExcludeMetadata = function (target, propertyName) {\n        return this.findMetadata(this._excludeMetadatas, target, propertyName);\n    };\n    MetadataStorage.prototype.findExposeMetadata = function (target, propertyName) {\n        return this.findMetadata(this._exposeMetadatas, target, propertyName);\n    };\n    MetadataStorage.prototype.findExposeMetadataByCustomName = function (target, name) {\n        return this._exposeMetadatas.find(function (metadata) {\n            return metadata.target === target && metadata.options && metadata.options.name === name;\n        });\n    };\n    MetadataStorage.prototype.findTypeMetadata = function (target, propertyName) {\n        return this.findMetadata(this._typeMetadatas, target, propertyName);\n    };\n    MetadataStorage.prototype.getStrategy = function (target) {\n        var exclude = this._excludeMetadatas.find(function (metadata) {\n            return metadata.target === target && metadata.propertyName === undefined;\n        });\n        var expose = this._exposeMetadatas.find(function (metadata) {\n            return metadata.target === target && metadata.propertyName === undefined;\n        });\n        if (exclude && expose || !exclude && !expose) return \"none\";\n        return exclude ? \"excludeAll\" : \"exposeAll\";\n    };\n    MetadataStorage.prototype.getExposedMetadatas = function (target) {\n        return this.getMetadata(this._exposeMetadatas, target);\n    };\n    MetadataStorage.prototype.getExcludedMetadatas = function (target) {\n        return this.getMetadata(this._excludeMetadatas, target);\n    };\n    MetadataStorage.prototype.getExposedProperties = function (target, transformationType) {\n        return this.getExposedMetadatas(target).filter(function (metadata) {\n            if (!metadata.options) return true;\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true) return true;\n            if (metadata.options.toClassOnly === true) {\n                return transformationType === \"classToClass\" || transformationType === \"plainToClass\";\n            }\n            if (metadata.options.toPlainOnly === true) {\n                return transformationType === \"classToPlain\";\n            }\n            return true;\n        }).map(function (metadata) {\n            return metadata.propertyName;\n        });\n    };\n    MetadataStorage.prototype.getExcludedProperties = function (target, transformationType) {\n        return this.getExcludedMetadatas(target).filter(function (metadata) {\n            if (!metadata.options) return true;\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true) return true;\n            if (metadata.options.toClassOnly === true) {\n                return transformationType === \"classToClass\" || transformationType === \"plainToClass\";\n            }\n            if (metadata.options.toPlainOnly === true) {\n                return transformationType === \"classToPlain\";\n            }\n            return true;\n        }).map(function (metadata) {\n            return metadata.propertyName;\n        });\n    };\n    MetadataStorage.prototype.clear = function () {\n        this._typeMetadatas = [];\n        this._exposeMetadatas = [];\n        this._excludeMetadatas = [];\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    MetadataStorage.prototype.getMetadata = function (metadatas, target) {\n        var metadataFromTarget = metadatas.filter(function (meta) {\n            return meta.target === target && meta.propertyName !== undefined;\n        });\n        var metadataFromChildren = metadatas.filter(function (meta) {\n            return target.prototype instanceof meta.target && meta.propertyName !== undefined;\n        });\n        return metadataFromChildren.concat(metadataFromTarget);\n    };\n    MetadataStorage.prototype.findMetadata = function (metadatas, target, propertyName) {\n        var metadataFromTarget = metadatas.find(function (meta) {\n            return meta.target === target && meta.propertyName === propertyName;\n        });\n        var metadataFromChildren = metadatas.find(function (meta) {\n            return target.prototype instanceof meta.target && meta.propertyName === propertyName;\n        });\n        return metadataFromTarget || metadataFromChildren;\n    };\n    MetadataStorage.prototype.findMetadatas = function (metadatas, target, propertyName) {\n        var metadataFromTarget = metadatas.filter(function (meta) {\n            return meta.target === target && meta.propertyName === propertyName;\n        });\n        var metadataFromChildren = metadatas.filter(function (meta) {\n            return target.prototype instanceof meta.target && meta.propertyName === propertyName;\n        });\n        return metadataFromChildren.reverse().concat(metadataFromTarget.reverse());\n    };\n    return MetadataStorage;\n}();\nexports.MetadataStorage = MetadataStorage;\n\n//# sourceMappingURL=MetadataStorage.js.map"
        },
        {
          "id": 13,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\TransformMetadata.js",
          "name": "./~/class-transformer/metadata/TransformMetadata.js",
          "index": 17,
          "index2": 11,
          "size": 408,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "issuerId": 8,
          "issuerName": "./~/class-transformer/decorators.js",
          "profile": {
            "factory": 17,
            "building": 95
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
              "module": "./~/class-transformer/decorators.js",
              "moduleName": "./~/class-transformer/decorators.js",
              "type": "cjs require",
              "userRequest": "./metadata/TransformMetadata",
              "loc": "8:26-65"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 5,
          "source": "\"use strict\";\n\nvar TransformMetadata = function () {\n    function TransformMetadata(target, propertyName, transformFn, options) {\n        this.target = target;\n        this.propertyName = propertyName;\n        this.transformFn = transformFn;\n        this.options = options;\n    }\n    return TransformMetadata;\n}();\nexports.TransformMetadata = TransformMetadata;\n\n//# sourceMappingURL=TransformMetadata.js.map"
        },
        {
          "id": 14,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\TypeMetadata.js",
          "name": "./~/class-transformer/metadata/TypeMetadata.js",
          "index": 14,
          "index2": 8,
          "size": 399,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "issuerId": 8,
          "issuerName": "./~/class-transformer/decorators.js",
          "profile": {
            "factory": 15,
            "building": 91
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
              "module": "./~/class-transformer/decorators.js",
              "moduleName": "./~/class-transformer/decorators.js",
              "type": "cjs require",
              "userRequest": "./metadata/TypeMetadata",
              "loc": "5:21-55"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 5,
          "source": "\"use strict\";\n\nvar TypeMetadata = function () {\n    function TypeMetadata(target, propertyName, reflectedType, typeFunction) {\n        this.target = target;\n        this.propertyName = propertyName;\n        this.reflectedType = reflectedType;\n        this.typeFunction = typeFunction;\n    }\n    return TypeMetadata;\n}();\nexports.TypeMetadata = TypeMetadata;\n\n//# sourceMappingURL=TypeMetadata.js.map"
        },
        {
          "id": 15,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\events\\events.js",
          "name": "./~/events/events.js",
          "index": 3,
          "index2": 0,
          "size": 8089,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
          "issuerId": 6,
          "issuerName": "./~/buttplug/dist/main/src/core/client.js",
          "profile": {
            "factory": 28,
            "building": 229
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
              "module": "./~/buttplug/dist/main/src/core/client.js",
              "moduleName": "./~/buttplug/dist/main/src/core/client.js",
              "type": "cjs require",
              "userRequest": "events",
              "loc": "97:15-32"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 3,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function (n) {\n  if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function (type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events) this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler)) return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++) listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function (type, listener) {\n  var m;\n\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\n\n  if (!this._events) this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function (type, listener) {\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function (type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type]) return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener || isFunction(list.listener) && list.listener === listener) {\n    delete this._events[type];\n    if (this._events.removeListener) this.emit('removeListener', type, listener);\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener || list[i].listener && list[i].listener === listener) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener) this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function (type) {\n  var key, listeners;\n\n  if (!this._events) return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function (type) {\n  var ret;\n  if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function (type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}"
        },
        {
          "id": 16,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\process\\browser.js",
          "name": "./~/process/browser.js",
          "index": 6,
          "index2": 1,
          "size": 5434,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
          "issuerId": 17,
          "issuerName": "./~/reflect-metadata/Reflect.js",
          "profile": {
            "factory": 101,
            "building": 44
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 17,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
              "module": "./~/reflect-metadata/Reflect.js",
              "moduleName": "./~/reflect-metadata/Reflect.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 4,
          "source": "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n    return [];\n};\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n    return '/';\n};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n    return 0;\n};"
        },
        {
          "id": 17,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
          "name": "./~/reflect-metadata/Reflect.js",
          "index": 5,
          "index2": 3,
          "size": 46962,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
          "issuerId": 1,
          "issuerName": "./~/buttplug/dist/main/src/core/messages.js",
          "profile": {
            "factory": 95,
            "building": 181
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 1,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
              "module": "./~/buttplug/dist/main/src/core/messages.js",
              "moduleName": "./~/buttplug/dist/main/src/core/messages.js",
              "type": "cjs require",
              "userRequest": "reflect-metadata",
              "loc": "18:0-27"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 3,
          "source": "/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    \"use strict\";\n\n    var hasOwn = Object.prototype.hasOwnProperty;\n    // feature test for Symbol support\n    var supportsSymbol = typeof Symbol === \"function\";\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n    var HashMap;\n    (function (HashMap) {\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n        HashMap.create = supportsCreate ? function () {\n            return MakeDictionary(Object.create(null));\n        } : supportsProto ? function () {\n            return MakeDictionary({ __proto__: null });\n        } : function () {\n            return MakeDictionary({});\n        };\n        HashMap.has = downLevel ? function (map, key) {\n            return hasOwn.call(map, key);\n        } : function (map, key) {\n            return key in map;\n        };\n        HashMap.get = downLevel ? function (map, key) {\n            return hasOwn.call(map, key) ? map[key] : undefined;\n        } : function (map, key) {\n            return map[key];\n        };\n    })(HashMap || (HashMap = {}));\n    // Load global or shim versions of Map, Set, and WeakMap\n    var functionPrototype = Object.getPrototypeOf(Function);\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n    // [[Metadata]] internal slot\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n    var Metadata = new _WeakMap();\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\n    function decorate(decorators, target, propertyKey, attributes) {\n        if (!IsUndefined(propertyKey)) {\n            if (!IsArray(decorators)) throw new TypeError();\n            if (!IsObject(target)) throw new TypeError();\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();\n            if (IsNull(attributes)) attributes = undefined;\n            propertyKey = ToPropertyKey(propertyKey);\n            return DecorateProperty(decorators, target, propertyKey, attributes);\n        } else {\n            if (!IsArray(decorators)) throw new TypeError();\n            if (!IsConstructor(target)) throw new TypeError();\n            return DecorateConstructor(decorators, target);\n        }\n    }\n    Reflect.decorate = decorate;\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\n    function metadata(metadataKey, metadataValue) {\n        function decorator(target, propertyKey) {\n            if (!IsObject(target)) throw new TypeError();\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        return decorator;\n    }\n    Reflect.metadata = metadata;\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n    }\n    Reflect.defineMetadata = defineMetadata;\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function hasMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n    }\n    Reflect.hasMetadata = hasMetadata;\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n    }\n    Reflect.hasOwnMetadata = hasOwnMetadata;\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function getMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n    }\n    Reflect.getMetadata = getMetadata;\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function getOwnMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n    }\n    Reflect.getOwnMetadata = getOwnMetadata;\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\n    function getMetadataKeys(target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryMetadataKeys(target, propertyKey);\n    }\n    Reflect.getMetadataKeys = getMetadataKeys;\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\n    function getOwnMetadataKeys(target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\n    }\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function deleteMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/false);\n        if (IsUndefined(metadataMap)) return false;\n        if (!metadataMap.delete(metadataKey)) return false;\n        if (metadataMap.size > 0) return true;\n        var targetMetadata = Metadata.get(target);\n        targetMetadata.delete(propertyKey);\n        if (targetMetadata.size > 0) return true;\n        Metadata.delete(target);\n        return true;\n    }\n    Reflect.deleteMetadata = deleteMetadata;\n    function DecorateConstructor(decorators, target) {\n        for (var i = decorators.length - 1; i >= 0; --i) {\n            var decorator = decorators[i];\n            var decorated = decorator(target);\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                if (!IsConstructor(decorated)) throw new TypeError();\n                target = decorated;\n            }\n        }\n        return target;\n    }\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\n        for (var i = decorators.length - 1; i >= 0; --i) {\n            var decorator = decorators[i];\n            var decorated = decorator(target, propertyKey, descriptor);\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                if (!IsObject(decorated)) throw new TypeError();\n                descriptor = decorated;\n            }\n        }\n        return descriptor;\n    }\n    function GetOrCreateMetadataMap(O, P, Create) {\n        var targetMetadata = Metadata.get(O);\n        if (IsUndefined(targetMetadata)) {\n            if (!Create) return undefined;\n            targetMetadata = new _Map();\n            Metadata.set(O, targetMetadata);\n        }\n        var metadataMap = targetMetadata.get(P);\n        if (IsUndefined(metadataMap)) {\n            if (!Create) return undefined;\n            metadataMap = new _Map();\n            targetMetadata.set(P, metadataMap);\n        }\n        return metadataMap;\n    }\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n        if (hasOwn) return true;\n        var parent = OrdinaryGetPrototypeOf(O);\n        if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);\n        return false;\n    }\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return false;\n        return ToBoolean(metadataMap.has(MetadataKey));\n    }\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n        if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        var parent = OrdinaryGetPrototypeOf(O);\n        if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);\n        return undefined;\n    }\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return undefined;\n        return metadataMap.get(MetadataKey);\n    }\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/true);\n        metadataMap.set(MetadataKey, MetadataValue);\n    }\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n    function OrdinaryMetadataKeys(O, P) {\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n        var parent = OrdinaryGetPrototypeOf(O);\n        if (parent === null) return ownKeys;\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\n        if (parentKeys.length <= 0) return ownKeys;\n        if (ownKeys.length <= 0) return parentKeys;\n        var set = new _Set();\n        var keys = [];\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n            var key = ownKeys_1[_i];\n            var hasKey = set.has(key);\n            if (!hasKey) {\n                set.add(key);\n                keys.push(key);\n            }\n        }\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n            var key = parentKeys_1[_a];\n            var hasKey = set.has(key);\n            if (!hasKey) {\n                set.add(key);\n                keys.push(key);\n            }\n        }\n        return keys;\n    }\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n    function OrdinaryOwnMetadataKeys(O, P) {\n        var keys = [];\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return keys;\n        var keysObj = metadataMap.keys();\n        var iterator = GetIterator(keysObj);\n        var k = 0;\n        while (true) {\n            var next = IteratorStep(iterator);\n            if (!next) {\n                keys.length = k;\n                return keys;\n            }\n            var nextValue = IteratorValue(next);\n            try {\n                keys[k] = nextValue;\n            } catch (e) {\n                try {\n                    IteratorClose(iterator);\n                } finally {\n                    throw e;\n                }\n            }\n            k++;\n        }\n    }\n    // 6 ECMAScript Data Typ0es and Values\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n    function Type(x) {\n        if (x === null) return 1 /* Null */;\n        switch (typeof x) {\n            case \"undefined\":\n                return 0 /* Undefined */;\n            case \"boolean\":\n                return 2 /* Boolean */;\n            case \"string\":\n                return 3 /* String */;\n            case \"symbol\":\n                return 4 /* Symbol */;\n            case \"number\":\n                return 5 /* Number */;\n            case \"object\":\n                return x === null ? 1 /* Null */ : 6 /* Object */;\n            default:\n                return 6 /* Object */;\n        }\n    }\n    // 6.1.1 The Undefined Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n    function IsUndefined(x) {\n        return x === undefined;\n    }\n    // 6.1.2 The Null Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n    function IsNull(x) {\n        return x === null;\n    }\n    // 6.1.5 The Symbol Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n    function IsSymbol(x) {\n        return typeof x === \"symbol\";\n    }\n    // 6.1.7 The Object Type\n    // https://tc39.github.io/ecma262/#sec-object-type\n    function IsObject(x) {\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n    }\n    // 7.1 Type Conversion\n    // https://tc39.github.io/ecma262/#sec-type-conversion\n    // 7.1.1 ToPrimitive(input [, PreferredType])\n    // https://tc39.github.io/ecma262/#sec-toprimitive\n    function ToPrimitive(input, PreferredType) {\n        switch (Type(input)) {\n            case 0 /* Undefined */:\n                return input;\n            case 1 /* Null */:\n                return input;\n            case 2 /* Boolean */:\n                return input;\n            case 3 /* String */:\n                return input;\n            case 4 /* Symbol */:\n                return input;\n            case 5 /* Number */:\n                return input;\n        }\n        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n        if (exoticToPrim !== undefined) {\n            var result = exoticToPrim.call(input, hint);\n            if (IsObject(result)) throw new TypeError();\n            return result;\n        }\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n    }\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n    function OrdinaryToPrimitive(O, hint) {\n        if (hint === \"string\") {\n            var toString_1 = O.toString;\n            if (IsCallable(toString_1)) {\n                var result = toString_1.call(O);\n                if (!IsObject(result)) return result;\n            }\n            var valueOf = O.valueOf;\n            if (IsCallable(valueOf)) {\n                var result = valueOf.call(O);\n                if (!IsObject(result)) return result;\n            }\n        } else {\n            var valueOf = O.valueOf;\n            if (IsCallable(valueOf)) {\n                var result = valueOf.call(O);\n                if (!IsObject(result)) return result;\n            }\n            var toString_2 = O.toString;\n            if (IsCallable(toString_2)) {\n                var result = toString_2.call(O);\n                if (!IsObject(result)) return result;\n            }\n        }\n        throw new TypeError();\n    }\n    // 7.1.2 ToBoolean(argument)\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\n    function ToBoolean(argument) {\n        return !!argument;\n    }\n    // 7.1.12 ToString(argument)\n    // https://tc39.github.io/ecma262/#sec-tostring\n    function ToString(argument) {\n        return \"\" + argument;\n    }\n    // 7.1.14 ToPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-topropertykey\n    function ToPropertyKey(argument) {\n        var key = ToPrimitive(argument, 3 /* String */);\n        if (IsSymbol(key)) return key;\n        return ToString(key);\n    }\n    // 7.2 Testing and Comparison Operations\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n    // 7.2.2 IsArray(argument)\n    // https://tc39.github.io/ecma262/#sec-isarray\n    function IsArray(argument) {\n        return Array.isArray ? Array.isArray(argument) : argument instanceof Object ? argument instanceof Array : Object.prototype.toString.call(argument) === \"[object Array]\";\n    }\n    // 7.2.3 IsCallable(argument)\n    // https://tc39.github.io/ecma262/#sec-iscallable\n    function IsCallable(argument) {\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n        return typeof argument === \"function\";\n    }\n    // 7.2.4 IsConstructor(argument)\n    // https://tc39.github.io/ecma262/#sec-isconstructor\n    function IsConstructor(argument) {\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n        return typeof argument === \"function\";\n    }\n    // 7.2.7 IsPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\n    function IsPropertyKey(argument) {\n        switch (Type(argument)) {\n            case 3 /* String */:\n                return true;\n            case 4 /* Symbol */:\n                return true;\n            default:\n                return false;\n        }\n    }\n    // 7.3 Operations on Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\n    // 7.3.9 GetMethod(V, P)\n    // https://tc39.github.io/ecma262/#sec-getmethod\n    function GetMethod(V, P) {\n        var func = V[P];\n        if (func === undefined || func === null) return undefined;\n        if (!IsCallable(func)) throw new TypeError();\n        return func;\n    }\n    // 7.4 Operations on Iterator Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n    function GetIterator(obj) {\n        var method = GetMethod(obj, iteratorSymbol);\n        if (!IsCallable(method)) throw new TypeError(); // from Call\n        var iterator = method.call(obj);\n        if (!IsObject(iterator)) throw new TypeError();\n        return iterator;\n    }\n    // 7.4.4 IteratorValue(iterResult)\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n    function IteratorValue(iterResult) {\n        return iterResult.value;\n    }\n    // 7.4.5 IteratorStep(iterator)\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\n    function IteratorStep(iterator) {\n        var result = iterator.next();\n        return result.done ? false : result;\n    }\n    // 7.4.6 IteratorClose(iterator, completion)\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\n    function IteratorClose(iterator) {\n        var f = iterator[\"return\"];\n        if (f) f.call(iterator);\n    }\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n    function OrdinaryGetPrototypeOf(O) {\n        var proto = Object.getPrototypeOf(O);\n        if (typeof O !== \"function\" || O === functionPrototype) return proto;\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n        // Try to determine the superclass constructor. Compatible implementations\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\n        // or ensure each class has a valid `constructor` property on its prototype that\n        // points back to the constructor.\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\n        if (proto !== functionPrototype) return proto;\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n        var prototype = O.prototype;\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n        if (prototypeProto == null || prototypeProto === Object.prototype) return proto;\n        // If the constructor was not a function, then we cannot determine the heritage.\n        var constructor = prototypeProto.constructor;\n        if (typeof constructor !== \"function\") return proto;\n        // If we have some kind of self-reference, then we cannot determine the heritage.\n        if (constructor === O) return proto;\n        // we have a pretty good guess at the heritage.\n        return constructor;\n    }\n    // naive Map shim\n    function CreateMapPolyfill() {\n        var cacheSentinel = {};\n        var arraySentinel = [];\n        var MapIterator = function () {\n            function MapIterator(keys, values, selector) {\n                this._index = 0;\n                this._keys = keys;\n                this._values = values;\n                this._selector = selector;\n            }\n            MapIterator.prototype[\"@@iterator\"] = function () {\n                return this;\n            };\n            MapIterator.prototype[iteratorSymbol] = function () {\n                return this;\n            };\n            MapIterator.prototype.next = function () {\n                var index = this._index;\n                if (index >= 0 && index < this._keys.length) {\n                    var result = this._selector(this._keys[index], this._values[index]);\n                    if (index + 1 >= this._keys.length) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    } else {\n                        this._index++;\n                    }\n                    return { value: result, done: false };\n                }\n                return { value: undefined, done: true };\n            };\n            MapIterator.prototype.throw = function (error) {\n                if (this._index >= 0) {\n                    this._index = -1;\n                    this._keys = arraySentinel;\n                    this._values = arraySentinel;\n                }\n                throw error;\n            };\n            MapIterator.prototype.return = function (value) {\n                if (this._index >= 0) {\n                    this._index = -1;\n                    this._keys = arraySentinel;\n                    this._values = arraySentinel;\n                }\n                return { value: value, done: true };\n            };\n            return MapIterator;\n        }();\n        return function () {\n            function Map() {\n                this._keys = [];\n                this._values = [];\n                this._cacheKey = cacheSentinel;\n                this._cacheIndex = -2;\n            }\n            Object.defineProperty(Map.prototype, \"size\", {\n                get: function () {\n                    return this._keys.length;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Map.prototype.has = function (key) {\n                return this._find(key, /*insert*/false) >= 0;\n            };\n            Map.prototype.get = function (key) {\n                var index = this._find(key, /*insert*/false);\n                return index >= 0 ? this._values[index] : undefined;\n            };\n            Map.prototype.set = function (key, value) {\n                var index = this._find(key, /*insert*/true);\n                this._values[index] = value;\n                return this;\n            };\n            Map.prototype.delete = function (key) {\n                var index = this._find(key, /*insert*/false);\n                if (index >= 0) {\n                    var size = this._keys.length;\n                    for (var i = index + 1; i < size; i++) {\n                        this._keys[i - 1] = this._keys[i];\n                        this._values[i - 1] = this._values[i];\n                    }\n                    this._keys.length--;\n                    this._values.length--;\n                    if (key === this._cacheKey) {\n                        this._cacheKey = cacheSentinel;\n                        this._cacheIndex = -2;\n                    }\n                    return true;\n                }\n                return false;\n            };\n            Map.prototype.clear = function () {\n                this._keys.length = 0;\n                this._values.length = 0;\n                this._cacheKey = cacheSentinel;\n                this._cacheIndex = -2;\n            };\n            Map.prototype.keys = function () {\n                return new MapIterator(this._keys, this._values, getKey);\n            };\n            Map.prototype.values = function () {\n                return new MapIterator(this._keys, this._values, getValue);\n            };\n            Map.prototype.entries = function () {\n                return new MapIterator(this._keys, this._values, getEntry);\n            };\n            Map.prototype[\"@@iterator\"] = function () {\n                return this.entries();\n            };\n            Map.prototype[iteratorSymbol] = function () {\n                return this.entries();\n            };\n            Map.prototype._find = function (key, insert) {\n                if (this._cacheKey !== key) {\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                }\n                if (this._cacheIndex < 0 && insert) {\n                    this._cacheIndex = this._keys.length;\n                    this._keys.push(key);\n                    this._values.push(undefined);\n                }\n                return this._cacheIndex;\n            };\n            return Map;\n        }();\n        function getKey(key, _) {\n            return key;\n        }\n        function getValue(_, value) {\n            return value;\n        }\n        function getEntry(key, value) {\n            return [key, value];\n        }\n    }\n    // naive Set shim\n    function CreateSetPolyfill() {\n        return function () {\n            function Set() {\n                this._map = new _Map();\n            }\n            Object.defineProperty(Set.prototype, \"size\", {\n                get: function () {\n                    return this._map.size;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Set.prototype.has = function (value) {\n                return this._map.has(value);\n            };\n            Set.prototype.add = function (value) {\n                return this._map.set(value, value), this;\n            };\n            Set.prototype.delete = function (value) {\n                return this._map.delete(value);\n            };\n            Set.prototype.clear = function () {\n                this._map.clear();\n            };\n            Set.prototype.keys = function () {\n                return this._map.keys();\n            };\n            Set.prototype.values = function () {\n                return this._map.values();\n            };\n            Set.prototype.entries = function () {\n                return this._map.entries();\n            };\n            Set.prototype[\"@@iterator\"] = function () {\n                return this.keys();\n            };\n            Set.prototype[iteratorSymbol] = function () {\n                return this.keys();\n            };\n            return Set;\n        }();\n    }\n    // naive WeakMap shim\n    function CreateWeakMapPolyfill() {\n        var UUID_SIZE = 16;\n        var keys = HashMap.create();\n        var rootKey = CreateUniqueKey();\n        return function () {\n            function WeakMap() {\n                this._key = CreateUniqueKey();\n            }\n            WeakMap.prototype.has = function (target) {\n                var table = GetOrCreateWeakMapTable(target, /*create*/false);\n                return table !== undefined ? HashMap.has(table, this._key) : false;\n            };\n            WeakMap.prototype.get = function (target) {\n                var table = GetOrCreateWeakMapTable(target, /*create*/false);\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\n            };\n            WeakMap.prototype.set = function (target, value) {\n                var table = GetOrCreateWeakMapTable(target, /*create*/true);\n                table[this._key] = value;\n                return this;\n            };\n            WeakMap.prototype.delete = function (target) {\n                var table = GetOrCreateWeakMapTable(target, /*create*/false);\n                return table !== undefined ? delete table[this._key] : false;\n            };\n            WeakMap.prototype.clear = function () {\n                // NOTE: not a real clear, just makes the previous data unreachable\n                this._key = CreateUniqueKey();\n            };\n            return WeakMap;\n        }();\n        function CreateUniqueKey() {\n            var key;\n            do key = \"@@WeakMap@@\" + CreateUUID(); while (HashMap.has(keys, key));\n            keys[key] = true;\n            return key;\n        }\n        function GetOrCreateWeakMapTable(target, create) {\n            if (!hasOwn.call(target, rootKey)) {\n                if (!create) return undefined;\n                Object.defineProperty(target, rootKey, { value: HashMap.create() });\n            }\n            return target[rootKey];\n        }\n        function FillRandomBytes(buffer, size) {\n            for (var i = 0; i < size; ++i) buffer[i] = Math.random() * 0xff | 0;\n            return buffer;\n        }\n        function GenRandomBytes(size) {\n            if (typeof Uint8Array === \"function\") {\n                if (typeof crypto !== \"undefined\") return crypto.getRandomValues(new Uint8Array(size));\n                if (typeof msCrypto !== \"undefined\") return msCrypto.getRandomValues(new Uint8Array(size));\n                return FillRandomBytes(new Uint8Array(size), size);\n            }\n            return FillRandomBytes(new Array(size), size);\n        }\n        function CreateUUID() {\n            var data = GenRandomBytes(UUID_SIZE);\n            // mark as random - RFC 4122 § 4.4\n            data[6] = data[6] & 0x4f | 0x40;\n            data[8] = data[8] & 0xbf | 0x80;\n            var result = \"\";\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                var byte = data[offset];\n                if (offset === 4 || offset === 6 || offset === 8) result += \"-\";\n                if (byte < 16) result += \"0\";\n                result += byte.toString(16).toLowerCase();\n            }\n            return result;\n        }\n    }\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n    function MakeDictionary(obj) {\n        obj.__ = undefined;\n        delete obj.__;\n        return obj;\n    }\n    // patch global Reflect\n    (function (__global) {\n        if (typeof __global.Reflect !== \"undefined\") {\n            if (__global.Reflect !== Reflect) {\n                for (var p in Reflect) {\n                    if (hasOwn.call(Reflect, p)) {\n                        __global.Reflect[p] = Reflect[p];\n                    }\n                }\n            }\n        } else {\n            __global.Reflect = Reflect;\n        }\n    })(typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : Function(\"return this;\")());\n})(Reflect || (Reflect = {}));\n//# sourceMappingURL=Reflect.js.map"
        },
        {
          "id": 18,
          "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\webpack\\buildin\\global.js",
          "name": "(webpack)/buildin/global.js",
          "index": 7,
          "index2": 2,
          "size": 487,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "assets": [],
          "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
          "issuerId": 17,
          "issuerName": "./~/reflect-metadata/Reflect.js",
          "profile": {
            "factory": 106,
            "building": 103
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "reasons": [
            {
              "moduleId": 17,
              "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
              "module": "./~/reflect-metadata/Reflect.js",
              "moduleName": "./~/reflect-metadata/Reflect.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "depth": 4,
          "source": "var g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;"
        }
      ],
      "filteredModules": 0,
      "origins": [
        {
          "moduleId": 5,
          "module": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
          "moduleName": "./js/scriptplayer.js",
          "loc": "",
          "name": "main",
          "reasons": []
        }
      ]
    }
  ],
  "modules": [
    {
      "id": 0,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
      "name": "./~/buttplug/dist/main/src/index.js",
      "index": 1,
      "index2": 17,
      "size": 318,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
      "issuerId": 5,
      "issuerName": "./js/scriptplayer.js",
      "profile": {
        "factory": 8,
        "building": 16
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
          "module": "./js/scriptplayer.js",
          "moduleName": "./js/scriptplayer.js",
          "type": "cjs require",
          "userRequest": "buttplug",
          "loc": "4:19-38"
        },
        {
          "moduleId": 5,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
          "module": "./js/scriptplayer.js",
          "moduleName": "./js/scriptplayer.js",
          "type": "cjs require",
          "userRequest": "buttplug",
          "loc": "5:17-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 1,
      "source": "\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./core/client\"));\n__export(require(\"./core/messages\"));\n__export(require(\"./core/device\"));\n//# sourceMappingURL=index.js.map"
    },
    {
      "id": 1,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
      "name": "./~/buttplug/dist/main/src/core/messages.js",
      "index": 4,
      "index2": 14,
      "size": 11014,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
      "issuerId": 0,
      "issuerName": "./~/buttplug/dist/main/src/index.js",
      "profile": {
        "factory": 4,
        "building": 105
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
          "module": "./~/buttplug/dist/main/src/index.js",
          "moduleName": "./~/buttplug/dist/main/src/index.js",
          "type": "cjs require",
          "userRequest": "./core/messages",
          "loc": "8:9-35"
        },
        {
          "moduleId": 3,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\device.js",
          "module": "./~/buttplug/dist/main/src/core/device.js",
          "moduleName": "./~/buttplug/dist/main/src/core/device.js",
          "type": "cjs require",
          "userRequest": "./messages",
          "loc": "4:15-36"
        },
        {
          "moduleId": 6,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
          "module": "./~/buttplug/dist/main/src/core/client.js",
          "moduleName": "./~/buttplug/dist/main/src/core/client.js",
          "type": "cjs require",
          "userRequest": "./messages",
          "loc": "98:15-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "'use strict';\n\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nvar class_transformer_1 = require(\"class-transformer\");\nvar ButtplugMessage = function () {\n    function ButtplugMessage(Id) {\n        this.Id = Id;\n    }\n    ButtplugMessage.prototype.getType = function () {\n        return this.constructor.name;\n    };\n    ButtplugMessage.prototype.toJSON = function () {\n        var json_obj = {};\n        var instance = this.constructor;\n        json_obj[instance.name] = class_transformer_1.classToPlain(this);\n        return JSON.stringify(json_obj);\n    };\n    return ButtplugMessage;\n}();\nexports.ButtplugMessage = ButtplugMessage;\nvar ButtplugDeviceMessage = function (_super) {\n    __extends(ButtplugDeviceMessage, _super);\n    function ButtplugDeviceMessage(DeviceIndex, Id) {\n        var _this = _super.call(this, Id) || this;\n        _this.DeviceIndex = DeviceIndex;\n        _this.Id = Id;\n        return _this;\n    }\n    return ButtplugDeviceMessage;\n}(ButtplugMessage);\nexports.ButtplugDeviceMessage = ButtplugDeviceMessage;\nvar ButtplugSystemMessage = function (_super) {\n    __extends(ButtplugSystemMessage, _super);\n    function ButtplugSystemMessage(Id) {\n        if (Id === void 0) {\n            Id = 0;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return ButtplugSystemMessage;\n}(ButtplugMessage);\nexports.ButtplugSystemMessage = ButtplugSystemMessage;\nvar Ok = function (_super) {\n    __extends(Ok, _super);\n    function Ok(Id) {\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return Ok;\n}(ButtplugSystemMessage);\nexports.Ok = Ok;\nvar Ping = function (_super) {\n    __extends(Ping, _super);\n    function Ping(Id) {\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return Ping;\n}(ButtplugMessage);\nexports.Ping = Ping;\nvar Test = function (_super) {\n    __extends(Test, _super);\n    function Test(TestString, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.TestString = TestString;\n        _this.Id = Id;\n        return _this;\n    }\n    return Test;\n}(ButtplugMessage);\nexports.Test = Test;\nvar Error = function (_super) {\n    __extends(Error, _super);\n    function Error(ErrorMessage, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.ErrorMessage = ErrorMessage;\n        _this.Id = Id;\n        return _this;\n    }\n    return Error;\n}(ButtplugSystemMessage);\nexports.Error = Error;\nvar DeviceInfo = function () {\n    function DeviceInfo(DeviceIndex, DeviceName, DeviceMessages) {\n        this.DeviceIndex = DeviceIndex;\n        this.DeviceName = DeviceName;\n        this.DeviceMessages = DeviceMessages;\n    }\n    return DeviceInfo;\n}();\nexports.DeviceInfo = DeviceInfo;\nvar DeviceList = function (_super) {\n    __extends(DeviceList, _super);\n    function DeviceList(Devices, Id) {\n        var _this = _super.call(this) || this;\n        _this.Devices = Devices;\n        _this.Id = Id;\n        return _this;\n    }\n    return DeviceList;\n}(ButtplugSystemMessage);\nexports.DeviceList = DeviceList;\nvar DeviceAdded = function (_super) {\n    __extends(DeviceAdded, _super);\n    function DeviceAdded(DeviceIndex, DeviceName, DeviceMessages) {\n        var _this = _super.call(this) || this;\n        _this.DeviceIndex = DeviceIndex;\n        _this.DeviceName = DeviceName;\n        _this.DeviceMessages = DeviceMessages;\n        return _this;\n    }\n    return DeviceAdded;\n}(ButtplugSystemMessage);\nexports.DeviceAdded = DeviceAdded;\nvar DeviceRemoved = function (_super) {\n    __extends(DeviceRemoved, _super);\n    function DeviceRemoved(DeviceIndex) {\n        var _this = _super.call(this) || this;\n        _this.DeviceIndex = DeviceIndex;\n        return _this;\n    }\n    return DeviceRemoved;\n}(ButtplugSystemMessage);\nexports.DeviceRemoved = DeviceRemoved;\nvar RequestDeviceList = function (_super) {\n    __extends(RequestDeviceList, _super);\n    function RequestDeviceList(Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return RequestDeviceList;\n}(ButtplugMessage);\nexports.RequestDeviceList = RequestDeviceList;\nvar StartScanning = function (_super) {\n    __extends(StartScanning, _super);\n    function StartScanning(Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return StartScanning;\n}(ButtplugMessage);\nexports.StartScanning = StartScanning;\nvar StopScanning = function (_super) {\n    __extends(StopScanning, _super);\n    function StopScanning(Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.Id = Id;\n        return _this;\n    }\n    return StopScanning;\n}(ButtplugMessage);\nexports.StopScanning = StopScanning;\nvar RequestLog = function (_super) {\n    __extends(RequestLog, _super);\n    function RequestLog(LogLevel, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.LogLevel = LogLevel;\n        _this.Id = Id;\n        return _this;\n    }\n    return RequestLog;\n}(ButtplugMessage);\nexports.RequestLog = RequestLog;\nvar Log = function (_super) {\n    __extends(Log, _super);\n    function Log(LogLevel, LogMessage) {\n        var _this = _super.call(this) || this;\n        _this.LogLevel = LogLevel;\n        _this.LogMessage = LogMessage;\n        return _this;\n    }\n    return Log;\n}(ButtplugSystemMessage);\nexports.Log = Log;\nvar RequestServerInfo = function (_super) {\n    __extends(RequestServerInfo, _super);\n    function RequestServerInfo(ClientName, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, Id) || this;\n        _this.ClientName = ClientName;\n        _this.Id = Id;\n        return _this;\n    }\n    return RequestServerInfo;\n}(ButtplugMessage);\nexports.RequestServerInfo = RequestServerInfo;\nvar ServerInfo = function (_super) {\n    __extends(ServerInfo, _super);\n    function ServerInfo(MajorVersion, MinorVersion, BuildVersion, MessageVersion, MaxPingTime, ServerName, Id) {\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this) || this;\n        _this.MajorVersion = MajorVersion;\n        _this.MinorVersion = MinorVersion;\n        _this.BuildVersion = BuildVersion;\n        _this.MessageVersion = MessageVersion;\n        _this.MaxPingTime = MaxPingTime;\n        _this.ServerName = ServerName;\n        _this.Id = Id;\n        return _this;\n    }\n    return ServerInfo;\n}(ButtplugSystemMessage);\nexports.ServerInfo = ServerInfo;\nvar FleshlightLaunchRawCmd = function (_super) {\n    __extends(FleshlightLaunchRawCmd, _super);\n    function FleshlightLaunchRawCmd(Speed, Position, DeviceIndex, Id) {\n        if (DeviceIndex === void 0) {\n            DeviceIndex = -1;\n        }\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, DeviceIndex, Id) || this;\n        _this.Speed = Speed;\n        _this.Position = Position;\n        _this.DeviceIndex = DeviceIndex;\n        _this.Id = Id;\n        return _this;\n    }\n    return FleshlightLaunchRawCmd;\n}(ButtplugDeviceMessage);\nexports.FleshlightLaunchRawCmd = FleshlightLaunchRawCmd;\nvar KiirooRawCmd = function (_super) {\n    __extends(KiirooRawCmd, _super);\n    function KiirooRawCmd(Position, DeviceIndex, Id) {\n        if (DeviceIndex === void 0) {\n            DeviceIndex = -1;\n        }\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, DeviceIndex, Id) || this;\n        _this.Position = Position;\n        _this.DeviceIndex = DeviceIndex;\n        _this.Id = Id;\n        return _this;\n    }\n    return KiirooRawCmd;\n}(ButtplugDeviceMessage);\nexports.KiirooRawCmd = KiirooRawCmd;\nvar SingleMotorVibrateCmd = function (_super) {\n    __extends(SingleMotorVibrateCmd, _super);\n    function SingleMotorVibrateCmd(Speed, DeviceIndex, Id) {\n        if (DeviceIndex === void 0) {\n            DeviceIndex = -1;\n        }\n        if (Id === void 0) {\n            Id = 1;\n        }\n        var _this = _super.call(this, DeviceIndex, Id) || this;\n        _this.Speed = Speed;\n        _this.DeviceIndex = DeviceIndex;\n        _this.Id = Id;\n        return _this;\n    }\n    return SingleMotorVibrateCmd;\n}(ButtplugDeviceMessage);\nexports.SingleMotorVibrateCmd = SingleMotorVibrateCmd;\nvar Messages = {\n    Ok: Ok,\n    Ping: Ping,\n    Test: Test,\n    Error: Error,\n    DeviceList: DeviceList,\n    DeviceAdded: DeviceAdded,\n    DeviceRemoved: DeviceRemoved,\n    RequestDeviceList: RequestDeviceList,\n    StartScanning: StartScanning,\n    StopScanning: StopScanning,\n    RequestLog: RequestLog,\n    Log: Log,\n    RequestServerInfo: RequestServerInfo,\n    ServerInfo: ServerInfo,\n    FleshlightLaunchRawCmd: FleshlightLaunchRawCmd,\n    KiirooRawCmd: KiirooRawCmd,\n    SingleMotorVibrateCmd: SingleMotorVibrateCmd\n};\nfunction FromJSON(str) {\n    // TODO We're assuming we'll always get valid json here. While it should pass\n    // through the schema parser first, it'd probably be good to make sure it\n    // deals with parse failures too.\n    var msgarray = JSON.parse(str);\n    var msgs = [];\n    for (var _i = 0, _a = Array.from(msgarray); _i < _a.length; _i++) {\n        var x = _a[_i];\n        // Can't get this to resolve nicely as a type, so just start from any and cast\n        // after. Not sure how to resolve plainToClass to a type since this is\n        // dynamic.\n        var msg = class_transformer_1.plainToClass(Messages[Object.getOwnPropertyNames(x)[0]], x[Object.getOwnPropertyNames(x)[0]]);\n        msgs.push(msg);\n    }\n    if (msgs.length == 0) {\n        // Backup in case the server sent us a single object outside of an array.\n        // Accoring to the schema, this should be illegal, so once schema checking\n        // is added this should become dead code.\n        var msg = class_transformer_1.plainToClass(Messages[Object.getOwnPropertyNames(msgarray)[0]], msgarray[Object.getOwnPropertyNames(msgarray)[0]]);\n        msgs.push(msg);\n    }\n    return msgs;\n}\nexports.FromJSON = FromJSON;\n//# sourceMappingURL=messages.js.map"
    },
    {
      "id": 2,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\ClassTransformer.js",
      "name": "./~/class-transformer/ClassTransformer.js",
      "index": 9,
      "index2": 7,
      "size": 2826,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
      "issuerId": 9,
      "issuerName": "./~/class-transformer/index.js",
      "profile": {
        "factory": 219,
        "building": 15
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "module": "./~/class-transformer/decorators.js",
          "moduleName": "./~/class-transformer/decorators.js",
          "type": "cjs require",
          "userRequest": "./ClassTransformer",
          "loc": "3:25-54"
        },
        {
          "moduleId": 9,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
          "module": "./~/class-transformer/index.js",
          "moduleName": "./~/class-transformer/index.js",
          "type": "cjs require",
          "userRequest": "./ClassTransformer",
          "loc": "6:25-54"
        },
        {
          "moduleId": 9,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
          "module": "./~/class-transformer/index.js",
          "moduleName": "./~/class-transformer/index.js",
          "type": "cjs require",
          "userRequest": "./ClassTransformer",
          "loc": "7:25-54"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\n\nvar TransformOperationExecutor_1 = require(\"./TransformOperationExecutor\");\nvar ClassTransformer = function () {\n    function ClassTransformer() {}\n    ClassTransformer.prototype.classToPlain = function (object, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"classToPlain\", options || {});\n        return executor.transform(undefined, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.classToPlainFromExist = function (object, plainObject, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"classToPlain\", options || {});\n        return executor.transform(plainObject, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.plainToClass = function (cls, plain, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"plainToClass\", options || {});\n        return executor.transform(undefined, plain, cls, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.plainToClassFromExist = function (clsObject, plain, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"plainToClass\", options || {});\n        return executor.transform(clsObject, plain, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.classToClass = function (object, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"classToClass\", options || {});\n        return executor.transform(undefined, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.classToClassFromExist = function (object, fromObject, options) {\n        var executor = new TransformOperationExecutor_1.TransformOperationExecutor(\"classToClass\", options || {});\n        return executor.transform(fromObject, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.serialize = function (object, options) {\n        return JSON.stringify(this.classToPlain(object, options));\n    };\n    /**\n     * Deserializes given JSON string to a object of the given class.\n     */\n    ClassTransformer.prototype.deserialize = function (cls, json, options) {\n        var jsonObject = JSON.parse(json);\n        return this.plainToClass(cls, jsonObject, options);\n    };\n    /**\n     * Deserializes given JSON string to an array of objects of the given class.\n     */\n    ClassTransformer.prototype.deserializeArray = function (cls, json, options) {\n        var jsonObject = JSON.parse(json);\n        return this.plainToClass(cls, jsonObject, options);\n    };\n    return ClassTransformer;\n}();\nexports.ClassTransformer = ClassTransformer;\n\n//# sourceMappingURL=ClassTransformer.js.map"
    },
    {
      "id": 3,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\device.js",
      "name": "./~/buttplug/dist/main/src/core/device.js",
      "index": 18,
      "index2": 15,
      "size": 1248,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
      "issuerId": 0,
      "issuerName": "./~/buttplug/dist/main/src/index.js",
      "profile": {
        "factory": 4,
        "building": 190,
        "dependencies": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
          "module": "./~/buttplug/dist/main/src/index.js",
          "moduleName": "./~/buttplug/dist/main/src/index.js",
          "type": "cjs require",
          "userRequest": "./core/device",
          "loc": "9:9-33"
        },
        {
          "moduleId": 6,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
          "module": "./~/buttplug/dist/main/src/core/client.js",
          "moduleName": "./~/buttplug/dist/main/src/core/client.js",
          "type": "cjs require",
          "userRequest": "./device",
          "loc": "99:15-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Messages = require(\"./messages\");\nvar Device = function () {\n    function Device(_index, _name, _allowedMessages) {\n        this._index = _index;\n        this._name = _name;\n        this._allowedMessages = _allowedMessages;\n    }\n    Device.fromMsg = function (aMsg) {\n        return new Device(aMsg.DeviceIndex, aMsg.DeviceName, aMsg.DeviceMessages);\n    };\n    Object.defineProperty(Device.prototype, \"Name\", {\n        get: function () {\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"Index\", {\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device.prototype, \"AllowedMessages\", {\n        get: function () {\n            return this._allowedMessages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Device.prototype.newMessage = function (allowedMsg) {\n        var msg = this._allowedMessages[allowedMsg];\n        return Messages[msg];\n    };\n    return Device;\n}();\nexports.Device = Device;\n//# sourceMappingURL=device.js.map"
    },
    {
      "id": 4,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\storage.js",
      "name": "./~/class-transformer/storage.js",
      "index": 11,
      "index2": 5,
      "size": 287,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
      "issuerId": 8,
      "issuerName": "./~/class-transformer/decorators.js",
      "profile": {
        "factory": 12,
        "building": 88
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 7,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\TransformOperationExecutor.js",
          "module": "./~/class-transformer/TransformOperationExecutor.js",
          "moduleName": "./~/class-transformer/TransformOperationExecutor.js",
          "type": "cjs require",
          "userRequest": "./storage",
          "loc": "3:16-36"
        },
        {
          "moduleId": 8,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "module": "./~/class-transformer/decorators.js",
          "moduleName": "./~/class-transformer/decorators.js",
          "type": "cjs require",
          "userRequest": "./storage",
          "loc": "4:16-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "\"use strict\";\n\nvar MetadataStorage_1 = require(\"./metadata/MetadataStorage\");\n/**\n * Default metadata storage is used as singleton and can be used to storage all metadatas.\n */\nexports.defaultMetadataStorage = new MetadataStorage_1.MetadataStorage();\n\n//# sourceMappingURL=storage.js.map"
    },
    {
      "id": 5,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\js\\scriptplayer.js",
      "name": "./js/scriptplayer.js",
      "index": 0,
      "index2": 18,
      "size": 6861,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "profile": {
        "factory": 20,
        "building": 576
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [],
      "usedExports": true,
      "providedExports": null,
      "depth": 0,
      "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buttplug_1 = require(\"buttplug\");\nconst Messages = require(\"buttplug\");\nclass DeviceHandler {\n    constructor(url, onready) {\n        this.devices = [];\n        this.setPosition = (position, speed) => {\n            if (this.devices.length === 0) return;\n            this.client.SendDeviceMessage(this.devices[0], new Messages.FleshlightLaunchRawCmd(speed, position));\n        };\n        this.client = new buttplug_1.ButtplugClient(\"ScriptPlayer.WebPlayer\");\n        this.client.Connect(url).then(result => {\n            console.log(\"Buttplug Client connected\");\n            console.log(result); // \"Stuff worked!\"\n            return this.client.StartScanning();\n        }, err => {\n            console.log(err); // Error: \"It broke\"\n        }).then(() => {\n            console.log(\"Requesting Device List\");\n            return this.client.RequestDeviceList();\n        }, err => {\n            console.log(err); // Error: \"It broke\"\n        }).then(() => {\n            this.devices = this.client.getDevices();\n            console.log(\"Device list fetched: \" + this.devices.length);\n            onready();\n        }, err => {\n            console.log(err); // Error: \"It broke\"\n        });\n    }\n}\nclass ScriptPlayer {\n    constructor(scriptLocation, video) {\n        this.url = \"http://localhost:6969\";\n        this.onDevicesReady = () => {\n            this.ui.deviceConnected();\n        };\n        this.handleFrameUpdate = () => {\n            window.requestAnimationFrame(() => {\n                if (this.script == null) return;\n                var timestamp = this.video.currentTime * 1000 - this.delay;\n                if (timestamp >= this.script.actions[this.checkpoint].at) {\n                    while (this.script.actions[this.checkpoint + 1].at <= timestamp && this.checkpoint < this.script.actions.length - 1) {\n                        this.checkpoint++;\n                    }\n                    if (this.checkpoint < this.script.actions.length - 1) {\n                        var tNow = this.script.actions[this.checkpoint].at;\n                        var tNext = this.script.actions[this.checkpoint + 1].at;\n                        var pNow = this.script.actions[this.checkpoint].pos;\n                        var pNext = this.script.actions[this.checkpoint + 1].pos;\n                        var speed = ScriptPlayer.predictSpeed(tNext - tNow, Math.abs(pNow - pNext));\n                        this.handl.setPosition(pNext, speed);\n                        this.checkpoint = this.checkpoint + 1;\n                    }\n                }\n                if (this.video.paused === false) {\n                    this.handleFrameUpdate();\n                }\n            });\n        };\n        this.jsonLoaded = response => {\n            var responseObject = JSON.parse(response);\n            this.script = responseObject;\n        };\n        this.loadJson = (scriptFile, callback) => {\n            var xobj = new XMLHttpRequest();\n            xobj.overrideMimeType(\"application/json\");\n            xobj.open(\"GET\", scriptFile, true);\n            xobj.onreadystatechange = () => {\n                if (xobj.readyState === 4 && xobj.status === 200) {\n                    callback(xobj.responseText);\n                }\n            };\n            xobj.send(null);\n        };\n        this.handl = new DeviceHandler(\"ws://localhost:12345/buttplug\", this.onDevicesReady);\n        this.checkpoint = 0;\n        this.video = video;\n        this.scriptFile = scriptLocation;\n        this.loadJson(this.scriptFile, this.jsonLoaded);\n        this.ui = new UiController(this.video);\n        this.delay = -0.1;\n        this.video.addEventListener(\"playing\", () => {\n            this.ui.scriptplayer.style.display = \"none\";\n            this.handleFrameUpdate();\n        }, false);\n        this.video.addEventListener(\"seeked\", ev => {\n            this.checkpoint = 9999999;\n            var currentTime = ev.target.currentTime * 1000 - this.delay;\n            this.checkpoint = this.findActionIndex(currentTime);\n        });\n    }\n    findActionIndex(time) {\n        if (this.script == null) return 0;\n        for (var i = 0; i < this.script.actions.length; i++) {\n            if (this.script.actions[i].at >= time) return i;\n        }\n        return this.script.actions.length;\n    }\n}\nScriptPlayer.predictSpeed = (time, range) => {\n    var fullLengthsPerSecond = 6.0;\n    var turnaroundDelay = 0.02; // 0.05;\n    var relativeLength = range / 99.0;\n    var durationAtFullSpeed = turnaroundDelay + relativeLength / fullLengthsPerSecond;\n    var requiredSpeed = durationAtFullSpeed / time;\n    var actualSpeed = ScriptPlayer.clampSpeed(requiredSpeed * 99.0);\n    return actualSpeed;\n};\nScriptPlayer.clampSpeed = speed => {\n    return Math.min(99, Math.max(0, Math.round(speed)));\n};\nexports.ScriptPlayer = ScriptPlayer;\nclass UiController {\n    constructor(video) {\n        this.deviceConnected = () => {\n            this.status.classList.remove(\"device-not-connected\");\n            this.status.classList.add(\"device-connected\");\n            this.title.style.display = \"none\";\n            this.scriptplayerbutton.style.display = \"block\";\n            this.playbutton.onclick = () => {\n                this.status.classList.add(\"on-video\");\n                this.video.controls = true;\n                this.video.play();\n                //fullscreen\n                //if (this.video.requestFullscreen) {\n                //    this.video.requestFullscreen();\n                //}       \n            };\n        };\n        this.onDeviceDisconnected = () => {\n            this.title.innerHTML = \"Searching for device, please wait...\";\n            this.title.style.display = \"block\";\n            this.title.style.display = \"none\";\n            this.video.controls = false;\n            this.video.pause();\n            this.status.classList.remove(\"on-video\");\n            this.scriptplayer.style.display = \"block\";\n        };\n        this.onDeviceNotLaunched = () => {\n            this.title.innerHTML = 'Please, start your application';\n            this.title.style.display = \"block\";\n            this.scriptplayerbutton.style.display = \"none\";\n            this.video.controls = false;\n            this.video.pause();\n            this.status.classList.remove(\"on-video\");\n            this.scriptplayer.style.display = \"block\";\n        };\n        this.video = video;\n        this.status = document.getElementById(\"connection-status\");\n        this.title = document.getElementById(\"scriptplayer-title\");\n        this.scriptplayerbutton = document.getElementById(\"scriptplayer-button\");\n        this.playbutton = document.getElementById(\"scriptplayer-play\");\n        this.scriptplayer = document.getElementById(\"scriptplayer\");\n        this.onDeviceNotLaunched();\n    }\n}\n//# sourceMappingURL=scriptplayer.js.map"
    },
    {
      "id": 6,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
      "name": "./~/buttplug/dist/main/src/core/client.js",
      "index": 2,
      "index2": 16,
      "size": 14146,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
      "issuerId": 0,
      "issuerName": "./~/buttplug/dist/main/src/index.js",
      "profile": {
        "factory": 4,
        "building": 175,
        "dependencies": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\index.js",
          "module": "./~/buttplug/dist/main/src/index.js",
          "moduleName": "./~/buttplug/dist/main/src/index.js",
          "type": "cjs require",
          "userRequest": "./core/client",
          "loc": "7:9-33"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 2,
      "source": "'use strict';\n\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : new P(function (resolve) {\n                resolve(result.value);\n            }).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n    var _ = { label: 0, sent: function () {\n            if (t[0] & 1) throw t[1];return t[1];\n        }, trys: [], ops: [] },\n        f,\n        y,\n        t,\n        g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n        return this;\n    }), g;\n    function verb(n) {\n        return function (v) {\n            return step([n, v]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0:case 1:\n                    t = op;break;\n                case 4:\n                    _.label++;return { value: op[1], done: false };\n                case 5:\n                    _.label++;y = op[1];op = [0];continue;\n                case 7:\n                    op = _.ops.pop();_.trys.pop();continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];t = op;break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];_.ops.push(op);break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [6, e];y = 0;\n        } finally {\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"events\");\nvar Messages = require(\"./messages\");\nvar device_1 = require(\"./device\");\nvar ButtplugClient = function (_super) {\n    __extends(ButtplugClient, _super);\n    function ButtplugClient(aClientName) {\n        var _this = _super.call(this) || this;\n        _this._devices = new Map();\n        _this._counter = 1;\n        _this._waitingMsgs = new Map();\n        _this.Connect = function (aUrl) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var _this = this;\n                var res, rej, p;\n                return __generator(this, function (_a) {\n                    this._ws = new WebSocket(aUrl);\n                    this._ws.addEventListener('message', function (ev) {\n                        _this.ParseIncomingMessage(ev);\n                    });\n                    p = new Promise(function (resolve, reject) {\n                        res = resolve;rej = reject;\n                    });\n                    this._ws.addEventListener('open', function (ev) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                            var msg;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        return [4 /*yield*/, this.SendMessage(new Messages.RequestServerInfo(this._clientName))];\n                                    case 1:\n                                        msg = _a.sent();\n                                        switch (msg.getType()) {\n                                            case 'ServerInfo':\n                                                // TODO: Actually deal with ping timing, maybe store server name, do\n                                                // something with message template version?\n                                                res();\n                                                break;\n                                            case 'Error':\n                                                rej();\n                                                break;\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        });\n                    });\n                    this._ws.addEventListener('close', function (ev) {\n                        rej(ev);\n                    });\n                    return [2 /*return*/, p];\n                });\n            });\n        };\n        _this.SendMsgExpectOk = function (aMsg) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var res, rej, msg, p;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMessage(aMsg)];\n                        case 1:\n                            msg = _a.sent();\n                            p = new Promise(function (resolve, reject) {\n                                res = resolve;rej = reject;\n                            });\n                            switch (msg.getType()) {\n                                case 'Ok':\n                                    res();\n                                    break;\n                                default:\n                                    rej();\n                                    break;\n                            }\n                            return [2 /*return*/, p];\n                    }\n                });\n            });\n        };\n        _this.RequestDeviceList = function () {\n            return __awaiter(_this, void 0, void 0, function () {\n                var _this = this;\n                var deviceList;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMessage(new Messages.RequestDeviceList())];\n                        case 1:\n                            deviceList = _a.sent();\n                            deviceList.Devices.forEach(function (d) {\n                                if (!_this._devices.has(d.DeviceIndex)) {\n                                    var device = device_1.Device.fromMsg(d);\n                                    _this._devices.set(d.DeviceIndex, device);\n                                    _this.emit('deviceadded', device);\n                                }\n                            });\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        _this.StartScanning = function () {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMsgExpectOk(new Messages.StartScanning())];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        _this.StopScanning = function () {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMsgExpectOk(new Messages.StopScanning())];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        _this.RequestLog = function (aLogLevel) {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.SendMsgExpectOk(new Messages.RequestLog(aLogLevel))];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        _this.ParseJSONMessage = function (aJSONMsg) {\n            var msgs = Messages.FromJSON(aJSONMsg);\n            msgs.forEach(function (x) {\n                if (x.Id > 0 && _this._waitingMsgs.has(x.Id)) {\n                    var res = _this._waitingMsgs.get(x.Id);\n                    // We already checked for this via has, but typescript is bitching if I\n                    // don't do it again.\n                    if (res === undefined) {\n                        return;\n                    }\n                    res(x);\n                    return;\n                }\n                switch (x.constructor.name) {\n                    case 'Log':\n                        _this.emit('log', x);\n                        break;\n                    case 'DeviceAdded':\n                        var added_msg = x;\n                        var d = device_1.Device.fromMsg(added_msg);\n                        _this._devices.set(added_msg.DeviceIndex, d);\n                        _this.emit('deviceadded', d);\n                        break;\n                    case 'DeviceRemoved':\n                        var removed_msg = x;\n                        if (_this._devices.has(removed_msg.DeviceIndex)) {\n                            var d_1 = _this._devices.get(removed_msg.DeviceIndex);\n                            _this._devices.delete(removed_msg.DeviceIndex);\n                            _this.emit('deviceremoved', d_1);\n                        }\n                        break;\n                }\n                ;\n            });\n        };\n        _this.ParseIncomingMessage = function (aEvent) {\n            if (typeof aEvent.data === 'string') {\n                _this.ParseJSONMessage(aEvent.data);\n            } else if (aEvent.data instanceof Blob) {\n                var reader = new FileReader();\n                reader.addEventListener('load', function (ev) {\n                    _this.OnReaderLoad(ev);\n                });\n                reader.readAsText(aEvent.data);\n            }\n        };\n        _this._clientName = aClientName;\n        return _this;\n    }\n    ButtplugClient.prototype.SendMessage = function (aMsg) {\n        return __awaiter(this, void 0, void 0, function () {\n            var res, msgPromise;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        aMsg.Id = this._counter;\n                        msgPromise = new Promise(function (resolve) {\n                            res = resolve;\n                        });\n                        this._waitingMsgs.set(this._counter, res);\n                        this._counter += 1;\n                        this._ws.send(\"[\" + aMsg.toJSON() + \"]\");\n                        return [4 /*yield*/, msgPromise];\n                    case 1:\n                        return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ButtplugClient.prototype.getDevices = function () {\n        var devices = [];\n        this._devices.forEach(function (d, i) {\n            devices.push(d);\n        });\n        return devices;\n    };\n    ButtplugClient.prototype.OnReaderLoad = function (aEvent) {\n        this.ParseJSONMessage(aEvent.target.result);\n    };\n    ButtplugClient.prototype.SendDeviceMessage = function (aDevice, aDeviceMsg) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dev;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        dev = this._devices.get(aDevice.Index);\n                        if (dev === undefined) {\n                            return [2 /*return*/, Promise.reject(new Error(\"Device not available.\"))];\n                        }\n                        if (dev.AllowedMessages.indexOf(aDeviceMsg.getType()) == -1) {\n                            return [2 /*return*/, Promise.reject(new Error(\"Device does not accept that message type.\"))];\n                        }\n                        aDeviceMsg.DeviceIndex = aDevice.Index;\n                        return [4 /*yield*/, this.SendMsgExpectOk(aDeviceMsg)];\n                    case 1:\n                        return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return ButtplugClient;\n}(events_1.EventEmitter);\nexports.ButtplugClient = ButtplugClient;\n//# sourceMappingURL=client.js.map"
    },
    {
      "id": 7,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\TransformOperationExecutor.js",
      "name": "./~/class-transformer/TransformOperationExecutor.js",
      "index": 10,
      "index2": 6,
      "size": 14900,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\ClassTransformer.js",
      "issuerId": 2,
      "issuerName": "./~/class-transformer/ClassTransformer.js",
      "profile": {
        "factory": 35,
        "building": 84,
        "dependencies": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\ClassTransformer.js",
          "module": "./~/class-transformer/ClassTransformer.js",
          "moduleName": "./~/class-transformer/ClassTransformer.js",
          "type": "cjs require",
          "userRequest": "./TransformOperationExecutor",
          "loc": "3:35-74"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "\"use strict\";\n\nvar storage_1 = require(\"./storage\");\nvar TransformOperationExecutor = function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TransformOperationExecutor(transformationType, options) {\n        this.transformationType = transformationType;\n        this.options = options;\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        this.transformedTypes = [];\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    TransformOperationExecutor.prototype.transform = function (source, value, targetType, arrayType, isMap, level) {\n        var _this = this;\n        if (level === void 0) {\n            level = 0;\n        }\n        if (value instanceof Array || value instanceof Set) {\n            var newValue_1 = arrayType && this.transformationType === \"plainToClass\" ? new arrayType() : [];\n            value.forEach(function (subValue, index) {\n                var subSource = source ? source[index] : undefined;\n                if (!_this.isCircular(subValue, level)) {\n                    var value_1 = _this.transform(subSource, subValue, targetType, undefined, subValue instanceof Map, level + 1);\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(value_1);\n                    } else {\n                        newValue_1.push(value_1);\n                    }\n                } else if (_this.transformationType === \"classToClass\") {\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(subValue);\n                    } else {\n                        newValue_1.push(subValue);\n                    }\n                }\n            });\n            return newValue_1;\n        } else if (targetType === String && !isMap) {\n            return String(value);\n        } else if (targetType === Number && !isMap) {\n            return Number(value);\n        } else if (targetType === Boolean && !isMap) {\n            return Boolean(value);\n        } else if ((targetType === Date || value instanceof Date) && !isMap) {\n            if (value instanceof Date) {\n                return new Date(value.valueOf());\n            }\n            if (value === null || value === undefined) return value;\n            return new Date(value);\n        } else if (value instanceof Object) {\n            // try to guess the type\n            if (!targetType && value.constructor !== Object /* && operationType === \"classToPlain\"*/) targetType = value.constructor;\n            if (!targetType && source) targetType = source.constructor;\n            // add transformed type to prevent circular references\n            this.transformedTypes.push({ level: level, object: value });\n            var keys = this.getKeys(targetType, value);\n            var newValue = source ? source : {};\n            if (!source && (this.transformationType === \"plainToClass\" || this.transformationType === \"classToClass\")) {\n                if (isMap) {\n                    newValue = new Map();\n                } else if (targetType) {\n                    newValue = new targetType();\n                } else {\n                    newValue = {};\n                }\n            }\n            // traverse over keys\n            var _loop_1 = function (key) {\n                var valueKey = key,\n                    newValueKey = key,\n                    propertyName = key;\n                if (!this_1.options.ignoreDecorators && targetType) {\n                    if (this_1.transformationType === \"plainToClass\") {\n                        var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadataByCustomName(targetType, key);\n                        if (exposeMetadata) {\n                            propertyName = exposeMetadata.propertyName;\n                            newValueKey = exposeMetadata.propertyName;\n                        }\n                    } else if (this_1.transformationType === \"classToPlain\" || this_1.transformationType === \"classToClass\") {\n                        var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(targetType, key);\n                        if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) newValueKey = exposeMetadata.options.name;\n                    }\n                }\n                // get a subvalue\n                var subValue = undefined;\n                if (value instanceof Map) {\n                    subValue = value.get(valueKey);\n                } else if (value[valueKey] instanceof Function) {\n                    subValue = value[valueKey]();\n                } else {\n                    subValue = value[valueKey];\n                }\n                // determine a type\n                var type = undefined,\n                    isSubValueMap = subValue instanceof Map;\n                if (targetType && isMap) {\n                    type = targetType;\n                } else if (targetType) {\n                    var metadata = storage_1.defaultMetadataStorage.findTypeMetadata(targetType, propertyName);\n                    if (metadata) {\n                        var options = { newObject: newValue, object: value, property: propertyName };\n                        type = metadata.typeFunction(options);\n                        isSubValueMap = isSubValueMap || metadata.reflectedType === Map;\n                    } else if (this_1.options.targetMaps) {\n                        this_1.options.targetMaps.filter(function (map) {\n                            return map.target === targetType && !!map.properties[propertyName];\n                        }).forEach(function (map) {\n                            return type = map.properties[propertyName];\n                        });\n                    }\n                }\n                // if value is an array try to get its custom array type\n                var arrayType_1 = value[valueKey] instanceof Array ? this_1.getReflectedType(targetType, propertyName) : undefined;\n                // const subValueKey = operationType === \"plainToClass\" && newKeyName ? newKeyName : key;\n                var subSource = source ? source[valueKey] : undefined;\n                // if its deserialization then type if required\n                // if we uncomment this types like string[] will not work\n                // if (this.transformationType === \"plainToClass\" && !type && subValue instanceof Object && !(subValue instanceof Date))\n                //     throw new Error(`Cannot determine type for ${(targetType as any).name }.${propertyName}, did you forget to specify a @Type?`);\n                // if newValue is a source object that has method that match newKeyName then skip it\n                if (newValue.constructor.prototype) {\n                    var descriptor = Object.getOwnPropertyDescriptor(newValue.constructor.prototype, newValueKey);\n                    if ((this_1.transformationType === \"plainToClass\" || this_1.transformationType === \"classToClass\") && (newValue[newValueKey] instanceof Function || descriptor && !descriptor.set)) return \"continue\";\n                }\n                if (!this_1.isCircular(subValue, level)) {\n                    var transformKey = this_1.transformationType === \"plainToClass\" ? newValueKey : key;\n                    var finalValue = this_1.transform(subSource, subValue, type, arrayType_1, isSubValueMap, level + 1);\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, transformKey);\n                    if (newValue instanceof Map) {\n                        newValue.set(newValueKey, finalValue);\n                    } else {\n                        newValue[newValueKey] = finalValue;\n                    }\n                } else if (this_1.transformationType === \"classToClass\") {\n                    var finalValue = subValue;\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, key);\n                    if (newValue instanceof Map) {\n                        newValue.set(newValueKey, finalValue);\n                    } else {\n                        newValue[newValueKey] = finalValue;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                _loop_1(key);\n            }\n            return newValue;\n        } else {\n            return value;\n        }\n    };\n    TransformOperationExecutor.prototype.applyCustomTransformations = function (value, target, key) {\n        var _this = this;\n        var metadatas = storage_1.defaultMetadataStorage.findTransformMetadatas(target, key, this.transformationType);\n        // apply versioning options\n        if (this.options.version !== undefined) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options) return true;\n                return _this.checkVersion(metadata.options.since, metadata.options.until);\n            });\n        }\n        // apply grouping options\n        if (this.options.groups && this.options.groups.length) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options) return true;\n                return _this.checkGroups(metadata.options.groups);\n            });\n        } else {\n            metadatas = metadatas.filter(function (metadata) {\n                return !metadata.options || !metadata.options.groups || !metadata.options.groups.length;\n            });\n        }\n        metadatas.forEach(function (metadata) {\n            value = metadata.transformFn(value);\n        });\n        return value;\n    };\n    // preventing circular references\n    TransformOperationExecutor.prototype.isCircular = function (object, level) {\n        return !!this.transformedTypes.find(function (transformed) {\n            return transformed.object === object && transformed.level < level;\n        });\n    };\n    TransformOperationExecutor.prototype.getReflectedType = function (target, propertyName) {\n        if (!target) return undefined;\n        var meta = storage_1.defaultMetadataStorage.findTypeMetadata(target, propertyName);\n        return meta ? meta.reflectedType : undefined;\n    };\n    TransformOperationExecutor.prototype.getKeys = function (target, object) {\n        var _this = this;\n        // determine exclusion strategy\n        var strategy = storage_1.defaultMetadataStorage.getStrategy(target);\n        if (strategy === \"none\") strategy = this.options.strategy || \"exposeAll\"; // exposeAll is default strategy\n        // get all keys that need to expose\n        var keys = [];\n        if (strategy === \"exposeAll\") {\n            if (object instanceof Map) {\n                keys = Array.from(object.keys());\n            } else {\n                keys = Object.keys(object);\n            }\n        }\n        if (!this.options.ignoreDecorators && target) {\n            // add all exposed to list of keys\n            var exposedProperties = storage_1.defaultMetadataStorage.getExposedProperties(target, this.transformationType);\n            if (this.transformationType === \"plainToClass\") {\n                exposedProperties = exposedProperties.map(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) {\n                        return exposeMetadata.options.name;\n                    }\n                    return key;\n                });\n            }\n            keys = keys.concat(exposedProperties);\n            // exclude excluded properties\n            var excludedProperties_1 = storage_1.defaultMetadataStorage.getExcludedProperties(target, this.transformationType);\n            if (excludedProperties_1.length > 0) {\n                keys = keys.filter(function (key) {\n                    return excludedProperties_1.indexOf(key) === -1;\n                });\n            }\n            // apply versioning options\n            if (this.options.version !== undefined) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options) return true;\n                    return _this.checkVersion(exposeMetadata.options.since, exposeMetadata.options.until);\n                });\n            }\n            // apply grouping options\n            if (this.options.groups && this.options.groups.length) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options) return true;\n                    return _this.checkGroups(exposeMetadata.options.groups);\n                });\n            } else {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    return !exposeMetadata || !exposeMetadata.options || !exposeMetadata.options.groups || !exposeMetadata.options.groups.length;\n                });\n            }\n        }\n        // exclude prefixed properties\n        if (this.options.excludePrefixes && this.options.excludePrefixes.length) {\n            keys = keys.filter(function (key) {\n                return _this.options.excludePrefixes.every(function (prefix) {\n                    return key.substr(0, prefix.length) !== prefix;\n                });\n            });\n        }\n        // make sure we have unique keys\n        keys = keys.filter(function (key, index, self) {\n            return self.indexOf(key) === index;\n        });\n        return keys;\n    };\n    TransformOperationExecutor.prototype.checkVersion = function (since, until) {\n        var decision = true;\n        if (decision && since) decision = this.options.version >= since;\n        if (decision && until) decision = this.options.version < until;\n        return decision;\n    };\n    TransformOperationExecutor.prototype.checkGroups = function (groups) {\n        if (!groups) return true;\n        return this.options.groups.some(function (optionGroup) {\n            return groups.indexOf(optionGroup) !== -1;\n        });\n    };\n    return TransformOperationExecutor;\n}();\nexports.TransformOperationExecutor = TransformOperationExecutor;\n\n//# sourceMappingURL=TransformOperationExecutor.js.map"
    },
    {
      "id": 8,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
      "name": "./~/class-transformer/decorators.js",
      "index": 13,
      "index2": 12,
      "size": 4254,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
      "issuerId": 9,
      "issuerName": "./~/class-transformer/index.js",
      "profile": {
        "factory": 220,
        "building": 37,
        "dependencies": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
          "module": "./~/class-transformer/index.js",
          "moduleName": "./~/class-transformer/index.js",
          "type": "cjs require",
          "userRequest": "./decorators",
          "loc": "9:9-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "\"use strict\";\n\nvar ClassTransformer_1 = require(\"./ClassTransformer\");\nvar storage_1 = require(\"./storage\");\nvar TypeMetadata_1 = require(\"./metadata/TypeMetadata\");\nvar ExposeMetadata_1 = require(\"./metadata/ExposeMetadata\");\nvar ExcludeMetadata_1 = require(\"./metadata/ExcludeMetadata\");\nvar TransformMetadata_1 = require(\"./metadata/TransformMetadata\");\n/**\n * Defines a custom logic for value transformation.\n */\nfunction Transform(transformFn, options) {\n    return function (target, key) {\n        var metadata = new TransformMetadata_1.TransformMetadata(target.constructor, key, transformFn, options);\n        storage_1.defaultMetadataStorage.addTransformMetadata(metadata);\n    };\n}\nexports.Transform = Transform;\n/**\n * Specifies a type of the property.\n */\nfunction Type(typeFunction) {\n    return function (target, key) {\n        var type = Reflect.getMetadata(\"design:type\", target, key);\n        var metadata = new TypeMetadata_1.TypeMetadata(target.constructor, key, type, typeFunction);\n        storage_1.defaultMetadataStorage.addTypeMetadata(metadata);\n    };\n}\nexports.Type = Type;\n/**\n * Marks property as included in the process of transformation. By default it includes the property for both\n * constructorToPlain and plainToConstructor transformations, however you can specify on which of transformation types\n * you want to skip this property.\n */\nfunction Expose(options) {\n    return function (object, propertyName) {\n        var metadata = new ExposeMetadata_1.ExposeMetadata(object instanceof Function ? object : object.constructor, propertyName, options || {});\n        storage_1.defaultMetadataStorage.addExposeMetadata(metadata);\n    };\n}\nexports.Expose = Expose;\n/**\n * Marks property as excluded from the process of transformation. By default it excludes the property for both\n * constructorToPlain and plainToConstructor transformations, however you can specify on which of transformation types\n * you want to skip this property.\n */\nfunction Exclude(options) {\n    return function (object, propertyName) {\n        var metadata = new ExcludeMetadata_1.ExcludeMetadata(object instanceof Function ? object : object.constructor, propertyName, options || {});\n        storage_1.defaultMetadataStorage.addExcludeMetadata(metadata);\n    };\n}\nexports.Exclude = Exclude;\n/**\n * Transform the object from class to plain object and return only with the exposed properties.\n */\nfunction TransformClassToPlain(params) {\n    return function (target, propertyKey, descriptor) {\n        var classTransformer = new ClassTransformer_1.ClassTransformer();\n        var originalMethod = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = originalMethod.apply(this, args);\n            var isPromise = !!result && (typeof result === \"object\" || typeof result === \"function\") && typeof result.then === \"function\";\n            return isPromise ? result.then(function (data) {\n                return classTransformer.classToPlain(data, params);\n            }) : classTransformer.classToPlain(result, params);\n        };\n    };\n}\nexports.TransformClassToPlain = TransformClassToPlain;\n/**\n * Return the class instance only with the exposed properties.\n */\nfunction TransformClassToClass(params) {\n    return function (target, propertyKey, descriptor) {\n        var classTransformer = new ClassTransformer_1.ClassTransformer();\n        var originalMethod = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = originalMethod.apply(this, args);\n            var isPromise = !!result && (typeof result === \"object\" || typeof result === \"function\") && typeof result.then === \"function\";\n            return isPromise ? result.then(function (data) {\n                return classTransformer.classToClass(data, params);\n            }) : classTransformer.classToClass(result, params);\n        };\n    };\n}\nexports.TransformClassToClass = TransformClassToClass;\n\n//# sourceMappingURL=decorators.js.map"
    },
    {
      "id": 9,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\index.js",
      "name": "./~/class-transformer/index.js",
      "index": 8,
      "index2": 13,
      "size": 2031,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
      "issuerId": 1,
      "issuerName": "./~/buttplug/dist/main/src/core/messages.js",
      "profile": {
        "factory": 94,
        "building": 17
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
          "module": "./~/buttplug/dist/main/src/core/messages.js",
          "moduleName": "./~/buttplug/dist/main/src/core/messages.js",
          "type": "cjs require",
          "userRequest": "class-transformer",
          "loc": "19:26-54"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar ClassTransformer_1 = require(\"./ClassTransformer\");\nvar ClassTransformer_2 = require(\"./ClassTransformer\");\nexports.ClassTransformer = ClassTransformer_2.ClassTransformer;\n__export(require(\"./decorators\"));\nvar classTransformer = new ClassTransformer_1.ClassTransformer();\nfunction classToPlain(object, options) {\n    return classTransformer.classToPlain(object, options);\n}\nexports.classToPlain = classToPlain;\nfunction classToPlainFromExist(object, plainObject, options) {\n    return classTransformer.classToPlainFromExist(object, plainObject, options);\n}\nexports.classToPlainFromExist = classToPlainFromExist;\nfunction plainToClass(cls, plain, options) {\n    return classTransformer.plainToClass(cls, plain, options);\n}\nexports.plainToClass = plainToClass;\nfunction plainToClassFromExist(clsObject, plain, options) {\n    return classTransformer.plainToClassFromExist(clsObject, plain, options);\n}\nexports.plainToClassFromExist = plainToClassFromExist;\nfunction classToClass(object, options) {\n    return classTransformer.classToClass(object, options);\n}\nexports.classToClass = classToClass;\nfunction classToClassFromExist(object, fromObject, options) {\n    return classTransformer.classToClassFromExist(object, fromObject, options);\n}\nexports.classToClassFromExist = classToClassFromExist;\nfunction serialize(object, options) {\n    return classTransformer.serialize(object, options);\n}\nexports.serialize = serialize;\n/**\n * Deserializes given JSON string to a object of the given class.\n */\nfunction deserialize(cls, json, options) {\n    return classTransformer.deserialize(cls, json, options);\n}\nexports.deserialize = deserialize;\n/**\n * Deserializes given JSON string to an array of objects of the given class.\n */\nfunction deserializeArray(cls, json, options) {\n    return classTransformer.deserializeArray(cls, json, options);\n}\nexports.deserializeArray = deserializeArray;\n\n//# sourceMappingURL=index.js.map"
    },
    {
      "id": 10,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\ExcludeMetadata.js",
      "name": "./~/class-transformer/metadata/ExcludeMetadata.js",
      "index": 16,
      "index2": 10,
      "size": 343,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
      "issuerId": 8,
      "issuerName": "./~/class-transformer/decorators.js",
      "profile": {
        "factory": 16,
        "building": 88
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "module": "./~/class-transformer/decorators.js",
          "moduleName": "./~/class-transformer/decorators.js",
          "type": "cjs require",
          "userRequest": "./metadata/ExcludeMetadata",
          "loc": "7:24-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "\"use strict\";\n\nvar ExcludeMetadata = function () {\n    function ExcludeMetadata(target, propertyName, options) {\n        this.target = target;\n        this.propertyName = propertyName;\n        this.options = options;\n    }\n    return ExcludeMetadata;\n}();\nexports.ExcludeMetadata = ExcludeMetadata;\n\n//# sourceMappingURL=ExcludeMetadata.js.map"
    },
    {
      "id": 11,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\ExposeMetadata.js",
      "name": "./~/class-transformer/metadata/ExposeMetadata.js",
      "index": 15,
      "index2": 9,
      "size": 337,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
      "issuerId": 8,
      "issuerName": "./~/class-transformer/decorators.js",
      "profile": {
        "factory": 16,
        "building": 93
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "module": "./~/class-transformer/decorators.js",
          "moduleName": "./~/class-transformer/decorators.js",
          "type": "cjs require",
          "userRequest": "./metadata/ExposeMetadata",
          "loc": "6:23-59"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "\"use strict\";\n\nvar ExposeMetadata = function () {\n    function ExposeMetadata(target, propertyName, options) {\n        this.target = target;\n        this.propertyName = propertyName;\n        this.options = options;\n    }\n    return ExposeMetadata;\n}();\nexports.ExposeMetadata = ExposeMetadata;\n\n//# sourceMappingURL=ExposeMetadata.js.map"
    },
    {
      "id": 12,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\MetadataStorage.js",
      "name": "./~/class-transformer/metadata/MetadataStorage.js",
      "index": 12,
      "index2": 4,
      "size": 7155,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\storage.js",
      "issuerId": 4,
      "issuerName": "./~/class-transformer/storage.js",
      "profile": {
        "factory": 19,
        "building": 33
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 4,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\storage.js",
          "module": "./~/class-transformer/storage.js",
          "moduleName": "./~/class-transformer/storage.js",
          "type": "cjs require",
          "userRequest": "./metadata/MetadataStorage",
          "loc": "3:24-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 6,
      "source": "\"use strict\";\n/**\n * Storage all library metadata.\n */\n\nvar MetadataStorage = function () {\n    function MetadataStorage() {\n        // -------------------------------------------------------------------------\n        // Properties\n        // -------------------------------------------------------------------------\n        this._typeMetadatas = [];\n        this._transformMetadatas = [];\n        this._exposeMetadatas = [];\n        this._excludeMetadatas = [];\n    }\n    // -------------------------------------------------------------------------\n    // Adder Methods\n    // -------------------------------------------------------------------------\n    MetadataStorage.prototype.addTypeMetadata = function (metadata) {\n        this._typeMetadatas.push(metadata);\n    };\n    MetadataStorage.prototype.addTransformMetadata = function (metadata) {\n        this._transformMetadatas.push(metadata);\n    };\n    MetadataStorage.prototype.addExposeMetadata = function (metadata) {\n        this._exposeMetadatas.push(metadata);\n    };\n    MetadataStorage.prototype.addExcludeMetadata = function (metadata) {\n        this._excludeMetadatas.push(metadata);\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    MetadataStorage.prototype.findTransformMetadatas = function (target, propertyName, transformationType) {\n        return this.findMetadatas(this._transformMetadatas, target, propertyName).filter(function (metadata) {\n            if (!metadata.options) return true;\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true) return true;\n            if (metadata.options.toClassOnly === true) {\n                return transformationType === \"classToClass\" || transformationType === \"plainToClass\";\n            }\n            if (metadata.options.toPlainOnly === true) {\n                return transformationType === \"classToPlain\";\n            }\n            return true;\n        });\n    };\n    MetadataStorage.prototype.findExcludeMetadata = function (target, propertyName) {\n        return this.findMetadata(this._excludeMetadatas, target, propertyName);\n    };\n    MetadataStorage.prototype.findExposeMetadata = function (target, propertyName) {\n        return this.findMetadata(this._exposeMetadatas, target, propertyName);\n    };\n    MetadataStorage.prototype.findExposeMetadataByCustomName = function (target, name) {\n        return this._exposeMetadatas.find(function (metadata) {\n            return metadata.target === target && metadata.options && metadata.options.name === name;\n        });\n    };\n    MetadataStorage.prototype.findTypeMetadata = function (target, propertyName) {\n        return this.findMetadata(this._typeMetadatas, target, propertyName);\n    };\n    MetadataStorage.prototype.getStrategy = function (target) {\n        var exclude = this._excludeMetadatas.find(function (metadata) {\n            return metadata.target === target && metadata.propertyName === undefined;\n        });\n        var expose = this._exposeMetadatas.find(function (metadata) {\n            return metadata.target === target && metadata.propertyName === undefined;\n        });\n        if (exclude && expose || !exclude && !expose) return \"none\";\n        return exclude ? \"excludeAll\" : \"exposeAll\";\n    };\n    MetadataStorage.prototype.getExposedMetadatas = function (target) {\n        return this.getMetadata(this._exposeMetadatas, target);\n    };\n    MetadataStorage.prototype.getExcludedMetadatas = function (target) {\n        return this.getMetadata(this._excludeMetadatas, target);\n    };\n    MetadataStorage.prototype.getExposedProperties = function (target, transformationType) {\n        return this.getExposedMetadatas(target).filter(function (metadata) {\n            if (!metadata.options) return true;\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true) return true;\n            if (metadata.options.toClassOnly === true) {\n                return transformationType === \"classToClass\" || transformationType === \"plainToClass\";\n            }\n            if (metadata.options.toPlainOnly === true) {\n                return transformationType === \"classToPlain\";\n            }\n            return true;\n        }).map(function (metadata) {\n            return metadata.propertyName;\n        });\n    };\n    MetadataStorage.prototype.getExcludedProperties = function (target, transformationType) {\n        return this.getExcludedMetadatas(target).filter(function (metadata) {\n            if (!metadata.options) return true;\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true) return true;\n            if (metadata.options.toClassOnly === true) {\n                return transformationType === \"classToClass\" || transformationType === \"plainToClass\";\n            }\n            if (metadata.options.toPlainOnly === true) {\n                return transformationType === \"classToPlain\";\n            }\n            return true;\n        }).map(function (metadata) {\n            return metadata.propertyName;\n        });\n    };\n    MetadataStorage.prototype.clear = function () {\n        this._typeMetadatas = [];\n        this._exposeMetadatas = [];\n        this._excludeMetadatas = [];\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    MetadataStorage.prototype.getMetadata = function (metadatas, target) {\n        var metadataFromTarget = metadatas.filter(function (meta) {\n            return meta.target === target && meta.propertyName !== undefined;\n        });\n        var metadataFromChildren = metadatas.filter(function (meta) {\n            return target.prototype instanceof meta.target && meta.propertyName !== undefined;\n        });\n        return metadataFromChildren.concat(metadataFromTarget);\n    };\n    MetadataStorage.prototype.findMetadata = function (metadatas, target, propertyName) {\n        var metadataFromTarget = metadatas.find(function (meta) {\n            return meta.target === target && meta.propertyName === propertyName;\n        });\n        var metadataFromChildren = metadatas.find(function (meta) {\n            return target.prototype instanceof meta.target && meta.propertyName === propertyName;\n        });\n        return metadataFromTarget || metadataFromChildren;\n    };\n    MetadataStorage.prototype.findMetadatas = function (metadatas, target, propertyName) {\n        var metadataFromTarget = metadatas.filter(function (meta) {\n            return meta.target === target && meta.propertyName === propertyName;\n        });\n        var metadataFromChildren = metadatas.filter(function (meta) {\n            return target.prototype instanceof meta.target && meta.propertyName === propertyName;\n        });\n        return metadataFromChildren.reverse().concat(metadataFromTarget.reverse());\n    };\n    return MetadataStorage;\n}();\nexports.MetadataStorage = MetadataStorage;\n\n//# sourceMappingURL=MetadataStorage.js.map"
    },
    {
      "id": 13,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\TransformMetadata.js",
      "name": "./~/class-transformer/metadata/TransformMetadata.js",
      "index": 17,
      "index2": 11,
      "size": 408,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
      "issuerId": 8,
      "issuerName": "./~/class-transformer/decorators.js",
      "profile": {
        "factory": 17,
        "building": 95
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "module": "./~/class-transformer/decorators.js",
          "moduleName": "./~/class-transformer/decorators.js",
          "type": "cjs require",
          "userRequest": "./metadata/TransformMetadata",
          "loc": "8:26-65"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "\"use strict\";\n\nvar TransformMetadata = function () {\n    function TransformMetadata(target, propertyName, transformFn, options) {\n        this.target = target;\n        this.propertyName = propertyName;\n        this.transformFn = transformFn;\n        this.options = options;\n    }\n    return TransformMetadata;\n}();\nexports.TransformMetadata = TransformMetadata;\n\n//# sourceMappingURL=TransformMetadata.js.map"
    },
    {
      "id": 14,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\metadata\\TypeMetadata.js",
      "name": "./~/class-transformer/metadata/TypeMetadata.js",
      "index": 14,
      "index2": 8,
      "size": 399,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
      "issuerId": 8,
      "issuerName": "./~/class-transformer/decorators.js",
      "profile": {
        "factory": 15,
        "building": 91
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\class-transformer\\decorators.js",
          "module": "./~/class-transformer/decorators.js",
          "moduleName": "./~/class-transformer/decorators.js",
          "type": "cjs require",
          "userRequest": "./metadata/TypeMetadata",
          "loc": "5:21-55"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 5,
      "source": "\"use strict\";\n\nvar TypeMetadata = function () {\n    function TypeMetadata(target, propertyName, reflectedType, typeFunction) {\n        this.target = target;\n        this.propertyName = propertyName;\n        this.reflectedType = reflectedType;\n        this.typeFunction = typeFunction;\n    }\n    return TypeMetadata;\n}();\nexports.TypeMetadata = TypeMetadata;\n\n//# sourceMappingURL=TypeMetadata.js.map"
    },
    {
      "id": 15,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\events\\events.js",
      "name": "./~/events/events.js",
      "index": 3,
      "index2": 0,
      "size": 8089,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
      "issuerId": 6,
      "issuerName": "./~/buttplug/dist/main/src/core/client.js",
      "profile": {
        "factory": 28,
        "building": 229
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 6,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\client.js",
          "module": "./~/buttplug/dist/main/src/core/client.js",
          "moduleName": "./~/buttplug/dist/main/src/core/client.js",
          "type": "cjs require",
          "userRequest": "events",
          "loc": "97:15-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function (n) {\n  if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function (type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events) this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler)) return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++) listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function (type, listener) {\n  var m;\n\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\n\n  if (!this._events) this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function (type, listener) {\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function (type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type]) return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener || isFunction(list.listener) && list.listener === listener) {\n    delete this._events[type];\n    if (this._events.removeListener) this.emit('removeListener', type, listener);\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener || list[i].listener && list[i].listener === listener) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener) this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function (type) {\n  var key, listeners;\n\n  if (!this._events) return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function (type) {\n  var ret;\n  if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function (type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}"
    },
    {
      "id": 16,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\process\\browser.js",
      "name": "./~/process/browser.js",
      "index": 6,
      "index2": 1,
      "size": 5434,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
      "issuerId": 17,
      "issuerName": "./~/reflect-metadata/Reflect.js",
      "profile": {
        "factory": 101,
        "building": 44
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 17,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
          "module": "./~/reflect-metadata/Reflect.js",
          "moduleName": "./~/reflect-metadata/Reflect.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n    return [];\n};\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n    return '/';\n};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n    return 0;\n};"
    },
    {
      "id": 17,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
      "name": "./~/reflect-metadata/Reflect.js",
      "index": 5,
      "index2": 3,
      "size": 46962,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
      "issuerId": 1,
      "issuerName": "./~/buttplug/dist/main/src/core/messages.js",
      "profile": {
        "factory": 95,
        "building": 181
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\buttplug\\dist\\main\\src\\core\\messages.js",
          "module": "./~/buttplug/dist/main/src/core/messages.js",
          "moduleName": "./~/buttplug/dist/main/src/core/messages.js",
          "type": "cjs require",
          "userRequest": "reflect-metadata",
          "loc": "18:0-27"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 3,
      "source": "/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    \"use strict\";\n\n    var hasOwn = Object.prototype.hasOwnProperty;\n    // feature test for Symbol support\n    var supportsSymbol = typeof Symbol === \"function\";\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n    var HashMap;\n    (function (HashMap) {\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n        HashMap.create = supportsCreate ? function () {\n            return MakeDictionary(Object.create(null));\n        } : supportsProto ? function () {\n            return MakeDictionary({ __proto__: null });\n        } : function () {\n            return MakeDictionary({});\n        };\n        HashMap.has = downLevel ? function (map, key) {\n            return hasOwn.call(map, key);\n        } : function (map, key) {\n            return key in map;\n        };\n        HashMap.get = downLevel ? function (map, key) {\n            return hasOwn.call(map, key) ? map[key] : undefined;\n        } : function (map, key) {\n            return map[key];\n        };\n    })(HashMap || (HashMap = {}));\n    // Load global or shim versions of Map, Set, and WeakMap\n    var functionPrototype = Object.getPrototypeOf(Function);\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n    // [[Metadata]] internal slot\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n    var Metadata = new _WeakMap();\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\n    function decorate(decorators, target, propertyKey, attributes) {\n        if (!IsUndefined(propertyKey)) {\n            if (!IsArray(decorators)) throw new TypeError();\n            if (!IsObject(target)) throw new TypeError();\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();\n            if (IsNull(attributes)) attributes = undefined;\n            propertyKey = ToPropertyKey(propertyKey);\n            return DecorateProperty(decorators, target, propertyKey, attributes);\n        } else {\n            if (!IsArray(decorators)) throw new TypeError();\n            if (!IsConstructor(target)) throw new TypeError();\n            return DecorateConstructor(decorators, target);\n        }\n    }\n    Reflect.decorate = decorate;\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\n    function metadata(metadataKey, metadataValue) {\n        function decorator(target, propertyKey) {\n            if (!IsObject(target)) throw new TypeError();\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        return decorator;\n    }\n    Reflect.metadata = metadata;\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n    }\n    Reflect.defineMetadata = defineMetadata;\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function hasMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n    }\n    Reflect.hasMetadata = hasMetadata;\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n    }\n    Reflect.hasOwnMetadata = hasOwnMetadata;\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function getMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n    }\n    Reflect.getMetadata = getMetadata;\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function getOwnMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n    }\n    Reflect.getOwnMetadata = getOwnMetadata;\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\n    function getMetadataKeys(target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryMetadataKeys(target, propertyKey);\n    }\n    Reflect.getMetadataKeys = getMetadataKeys;\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\n    function getOwnMetadataKeys(target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\n    }\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\n    function deleteMetadata(metadataKey, target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n        var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/false);\n        if (IsUndefined(metadataMap)) return false;\n        if (!metadataMap.delete(metadataKey)) return false;\n        if (metadataMap.size > 0) return true;\n        var targetMetadata = Metadata.get(target);\n        targetMetadata.delete(propertyKey);\n        if (targetMetadata.size > 0) return true;\n        Metadata.delete(target);\n        return true;\n    }\n    Reflect.deleteMetadata = deleteMetadata;\n    function DecorateConstructor(decorators, target) {\n        for (var i = decorators.length - 1; i >= 0; --i) {\n            var decorator = decorators[i];\n            var decorated = decorator(target);\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                if (!IsConstructor(decorated)) throw new TypeError();\n                target = decorated;\n            }\n        }\n        return target;\n    }\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\n        for (var i = decorators.length - 1; i >= 0; --i) {\n            var decorator = decorators[i];\n            var decorated = decorator(target, propertyKey, descriptor);\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                if (!IsObject(decorated)) throw new TypeError();\n                descriptor = decorated;\n            }\n        }\n        return descriptor;\n    }\n    function GetOrCreateMetadataMap(O, P, Create) {\n        var targetMetadata = Metadata.get(O);\n        if (IsUndefined(targetMetadata)) {\n            if (!Create) return undefined;\n            targetMetadata = new _Map();\n            Metadata.set(O, targetMetadata);\n        }\n        var metadataMap = targetMetadata.get(P);\n        if (IsUndefined(metadataMap)) {\n            if (!Create) return undefined;\n            metadataMap = new _Map();\n            targetMetadata.set(P, metadataMap);\n        }\n        return metadataMap;\n    }\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n        if (hasOwn) return true;\n        var parent = OrdinaryGetPrototypeOf(O);\n        if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);\n        return false;\n    }\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return false;\n        return ToBoolean(metadataMap.has(MetadataKey));\n    }\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n        if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        var parent = OrdinaryGetPrototypeOf(O);\n        if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);\n        return undefined;\n    }\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return undefined;\n        return metadataMap.get(MetadataKey);\n    }\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/true);\n        metadataMap.set(MetadataKey, MetadataValue);\n    }\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n    function OrdinaryMetadataKeys(O, P) {\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n        var parent = OrdinaryGetPrototypeOf(O);\n        if (parent === null) return ownKeys;\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\n        if (parentKeys.length <= 0) return ownKeys;\n        if (ownKeys.length <= 0) return parentKeys;\n        var set = new _Set();\n        var keys = [];\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n            var key = ownKeys_1[_i];\n            var hasKey = set.has(key);\n            if (!hasKey) {\n                set.add(key);\n                keys.push(key);\n            }\n        }\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n            var key = parentKeys_1[_a];\n            var hasKey = set.has(key);\n            if (!hasKey) {\n                set.add(key);\n                keys.push(key);\n            }\n        }\n        return keys;\n    }\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n    function OrdinaryOwnMetadataKeys(O, P) {\n        var keys = [];\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return keys;\n        var keysObj = metadataMap.keys();\n        var iterator = GetIterator(keysObj);\n        var k = 0;\n        while (true) {\n            var next = IteratorStep(iterator);\n            if (!next) {\n                keys.length = k;\n                return keys;\n            }\n            var nextValue = IteratorValue(next);\n            try {\n                keys[k] = nextValue;\n            } catch (e) {\n                try {\n                    IteratorClose(iterator);\n                } finally {\n                    throw e;\n                }\n            }\n            k++;\n        }\n    }\n    // 6 ECMAScript Data Typ0es and Values\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n    function Type(x) {\n        if (x === null) return 1 /* Null */;\n        switch (typeof x) {\n            case \"undefined\":\n                return 0 /* Undefined */;\n            case \"boolean\":\n                return 2 /* Boolean */;\n            case \"string\":\n                return 3 /* String */;\n            case \"symbol\":\n                return 4 /* Symbol */;\n            case \"number\":\n                return 5 /* Number */;\n            case \"object\":\n                return x === null ? 1 /* Null */ : 6 /* Object */;\n            default:\n                return 6 /* Object */;\n        }\n    }\n    // 6.1.1 The Undefined Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n    function IsUndefined(x) {\n        return x === undefined;\n    }\n    // 6.1.2 The Null Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n    function IsNull(x) {\n        return x === null;\n    }\n    // 6.1.5 The Symbol Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n    function IsSymbol(x) {\n        return typeof x === \"symbol\";\n    }\n    // 6.1.7 The Object Type\n    // https://tc39.github.io/ecma262/#sec-object-type\n    function IsObject(x) {\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n    }\n    // 7.1 Type Conversion\n    // https://tc39.github.io/ecma262/#sec-type-conversion\n    // 7.1.1 ToPrimitive(input [, PreferredType])\n    // https://tc39.github.io/ecma262/#sec-toprimitive\n    function ToPrimitive(input, PreferredType) {\n        switch (Type(input)) {\n            case 0 /* Undefined */:\n                return input;\n            case 1 /* Null */:\n                return input;\n            case 2 /* Boolean */:\n                return input;\n            case 3 /* String */:\n                return input;\n            case 4 /* Symbol */:\n                return input;\n            case 5 /* Number */:\n                return input;\n        }\n        var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n        if (exoticToPrim !== undefined) {\n            var result = exoticToPrim.call(input, hint);\n            if (IsObject(result)) throw new TypeError();\n            return result;\n        }\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n    }\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n    function OrdinaryToPrimitive(O, hint) {\n        if (hint === \"string\") {\n            var toString_1 = O.toString;\n            if (IsCallable(toString_1)) {\n                var result = toString_1.call(O);\n                if (!IsObject(result)) return result;\n            }\n            var valueOf = O.valueOf;\n            if (IsCallable(valueOf)) {\n                var result = valueOf.call(O);\n                if (!IsObject(result)) return result;\n            }\n        } else {\n            var valueOf = O.valueOf;\n            if (IsCallable(valueOf)) {\n                var result = valueOf.call(O);\n                if (!IsObject(result)) return result;\n            }\n            var toString_2 = O.toString;\n            if (IsCallable(toString_2)) {\n                var result = toString_2.call(O);\n                if (!IsObject(result)) return result;\n            }\n        }\n        throw new TypeError();\n    }\n    // 7.1.2 ToBoolean(argument)\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\n    function ToBoolean(argument) {\n        return !!argument;\n    }\n    // 7.1.12 ToString(argument)\n    // https://tc39.github.io/ecma262/#sec-tostring\n    function ToString(argument) {\n        return \"\" + argument;\n    }\n    // 7.1.14 ToPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-topropertykey\n    function ToPropertyKey(argument) {\n        var key = ToPrimitive(argument, 3 /* String */);\n        if (IsSymbol(key)) return key;\n        return ToString(key);\n    }\n    // 7.2 Testing and Comparison Operations\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n    // 7.2.2 IsArray(argument)\n    // https://tc39.github.io/ecma262/#sec-isarray\n    function IsArray(argument) {\n        return Array.isArray ? Array.isArray(argument) : argument instanceof Object ? argument instanceof Array : Object.prototype.toString.call(argument) === \"[object Array]\";\n    }\n    // 7.2.3 IsCallable(argument)\n    // https://tc39.github.io/ecma262/#sec-iscallable\n    function IsCallable(argument) {\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n        return typeof argument === \"function\";\n    }\n    // 7.2.4 IsConstructor(argument)\n    // https://tc39.github.io/ecma262/#sec-isconstructor\n    function IsConstructor(argument) {\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n        return typeof argument === \"function\";\n    }\n    // 7.2.7 IsPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\n    function IsPropertyKey(argument) {\n        switch (Type(argument)) {\n            case 3 /* String */:\n                return true;\n            case 4 /* Symbol */:\n                return true;\n            default:\n                return false;\n        }\n    }\n    // 7.3 Operations on Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\n    // 7.3.9 GetMethod(V, P)\n    // https://tc39.github.io/ecma262/#sec-getmethod\n    function GetMethod(V, P) {\n        var func = V[P];\n        if (func === undefined || func === null) return undefined;\n        if (!IsCallable(func)) throw new TypeError();\n        return func;\n    }\n    // 7.4 Operations on Iterator Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n    function GetIterator(obj) {\n        var method = GetMethod(obj, iteratorSymbol);\n        if (!IsCallable(method)) throw new TypeError(); // from Call\n        var iterator = method.call(obj);\n        if (!IsObject(iterator)) throw new TypeError();\n        return iterator;\n    }\n    // 7.4.4 IteratorValue(iterResult)\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n    function IteratorValue(iterResult) {\n        return iterResult.value;\n    }\n    // 7.4.5 IteratorStep(iterator)\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\n    function IteratorStep(iterator) {\n        var result = iterator.next();\n        return result.done ? false : result;\n    }\n    // 7.4.6 IteratorClose(iterator, completion)\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\n    function IteratorClose(iterator) {\n        var f = iterator[\"return\"];\n        if (f) f.call(iterator);\n    }\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n    function OrdinaryGetPrototypeOf(O) {\n        var proto = Object.getPrototypeOf(O);\n        if (typeof O !== \"function\" || O === functionPrototype) return proto;\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n        // Try to determine the superclass constructor. Compatible implementations\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\n        // or ensure each class has a valid `constructor` property on its prototype that\n        // points back to the constructor.\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\n        if (proto !== functionPrototype) return proto;\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n        var prototype = O.prototype;\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n        if (prototypeProto == null || prototypeProto === Object.prototype) return proto;\n        // If the constructor was not a function, then we cannot determine the heritage.\n        var constructor = prototypeProto.constructor;\n        if (typeof constructor !== \"function\") return proto;\n        // If we have some kind of self-reference, then we cannot determine the heritage.\n        if (constructor === O) return proto;\n        // we have a pretty good guess at the heritage.\n        return constructor;\n    }\n    // naive Map shim\n    function CreateMapPolyfill() {\n        var cacheSentinel = {};\n        var arraySentinel = [];\n        var MapIterator = function () {\n            function MapIterator(keys, values, selector) {\n                this._index = 0;\n                this._keys = keys;\n                this._values = values;\n                this._selector = selector;\n            }\n            MapIterator.prototype[\"@@iterator\"] = function () {\n                return this;\n            };\n            MapIterator.prototype[iteratorSymbol] = function () {\n                return this;\n            };\n            MapIterator.prototype.next = function () {\n                var index = this._index;\n                if (index >= 0 && index < this._keys.length) {\n                    var result = this._selector(this._keys[index], this._values[index]);\n                    if (index + 1 >= this._keys.length) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    } else {\n                        this._index++;\n                    }\n                    return { value: result, done: false };\n                }\n                return { value: undefined, done: true };\n            };\n            MapIterator.prototype.throw = function (error) {\n                if (this._index >= 0) {\n                    this._index = -1;\n                    this._keys = arraySentinel;\n                    this._values = arraySentinel;\n                }\n                throw error;\n            };\n            MapIterator.prototype.return = function (value) {\n                if (this._index >= 0) {\n                    this._index = -1;\n                    this._keys = arraySentinel;\n                    this._values = arraySentinel;\n                }\n                return { value: value, done: true };\n            };\n            return MapIterator;\n        }();\n        return function () {\n            function Map() {\n                this._keys = [];\n                this._values = [];\n                this._cacheKey = cacheSentinel;\n                this._cacheIndex = -2;\n            }\n            Object.defineProperty(Map.prototype, \"size\", {\n                get: function () {\n                    return this._keys.length;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Map.prototype.has = function (key) {\n                return this._find(key, /*insert*/false) >= 0;\n            };\n            Map.prototype.get = function (key) {\n                var index = this._find(key, /*insert*/false);\n                return index >= 0 ? this._values[index] : undefined;\n            };\n            Map.prototype.set = function (key, value) {\n                var index = this._find(key, /*insert*/true);\n                this._values[index] = value;\n                return this;\n            };\n            Map.prototype.delete = function (key) {\n                var index = this._find(key, /*insert*/false);\n                if (index >= 0) {\n                    var size = this._keys.length;\n                    for (var i = index + 1; i < size; i++) {\n                        this._keys[i - 1] = this._keys[i];\n                        this._values[i - 1] = this._values[i];\n                    }\n                    this._keys.length--;\n                    this._values.length--;\n                    if (key === this._cacheKey) {\n                        this._cacheKey = cacheSentinel;\n                        this._cacheIndex = -2;\n                    }\n                    return true;\n                }\n                return false;\n            };\n            Map.prototype.clear = function () {\n                this._keys.length = 0;\n                this._values.length = 0;\n                this._cacheKey = cacheSentinel;\n                this._cacheIndex = -2;\n            };\n            Map.prototype.keys = function () {\n                return new MapIterator(this._keys, this._values, getKey);\n            };\n            Map.prototype.values = function () {\n                return new MapIterator(this._keys, this._values, getValue);\n            };\n            Map.prototype.entries = function () {\n                return new MapIterator(this._keys, this._values, getEntry);\n            };\n            Map.prototype[\"@@iterator\"] = function () {\n                return this.entries();\n            };\n            Map.prototype[iteratorSymbol] = function () {\n                return this.entries();\n            };\n            Map.prototype._find = function (key, insert) {\n                if (this._cacheKey !== key) {\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                }\n                if (this._cacheIndex < 0 && insert) {\n                    this._cacheIndex = this._keys.length;\n                    this._keys.push(key);\n                    this._values.push(undefined);\n                }\n                return this._cacheIndex;\n            };\n            return Map;\n        }();\n        function getKey(key, _) {\n            return key;\n        }\n        function getValue(_, value) {\n            return value;\n        }\n        function getEntry(key, value) {\n            return [key, value];\n        }\n    }\n    // naive Set shim\n    function CreateSetPolyfill() {\n        return function () {\n            function Set() {\n                this._map = new _Map();\n            }\n            Object.defineProperty(Set.prototype, \"size\", {\n                get: function () {\n                    return this._map.size;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Set.prototype.has = function (value) {\n                return this._map.has(value);\n            };\n            Set.prototype.add = function (value) {\n                return this._map.set(value, value), this;\n            };\n            Set.prototype.delete = function (value) {\n                return this._map.delete(value);\n            };\n            Set.prototype.clear = function () {\n                this._map.clear();\n            };\n            Set.prototype.keys = function () {\n                return this._map.keys();\n            };\n            Set.prototype.values = function () {\n                return this._map.values();\n            };\n            Set.prototype.entries = function () {\n                return this._map.entries();\n            };\n            Set.prototype[\"@@iterator\"] = function () {\n                return this.keys();\n            };\n            Set.prototype[iteratorSymbol] = function () {\n                return this.keys();\n            };\n            return Set;\n        }();\n    }\n    // naive WeakMap shim\n    function CreateWeakMapPolyfill() {\n        var UUID_SIZE = 16;\n        var keys = HashMap.create();\n        var rootKey = CreateUniqueKey();\n        return function () {\n            function WeakMap() {\n                this._key = CreateUniqueKey();\n            }\n            WeakMap.prototype.has = function (target) {\n                var table = GetOrCreateWeakMapTable(target, /*create*/false);\n                return table !== undefined ? HashMap.has(table, this._key) : false;\n            };\n            WeakMap.prototype.get = function (target) {\n                var table = GetOrCreateWeakMapTable(target, /*create*/false);\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\n            };\n            WeakMap.prototype.set = function (target, value) {\n                var table = GetOrCreateWeakMapTable(target, /*create*/true);\n                table[this._key] = value;\n                return this;\n            };\n            WeakMap.prototype.delete = function (target) {\n                var table = GetOrCreateWeakMapTable(target, /*create*/false);\n                return table !== undefined ? delete table[this._key] : false;\n            };\n            WeakMap.prototype.clear = function () {\n                // NOTE: not a real clear, just makes the previous data unreachable\n                this._key = CreateUniqueKey();\n            };\n            return WeakMap;\n        }();\n        function CreateUniqueKey() {\n            var key;\n            do key = \"@@WeakMap@@\" + CreateUUID(); while (HashMap.has(keys, key));\n            keys[key] = true;\n            return key;\n        }\n        function GetOrCreateWeakMapTable(target, create) {\n            if (!hasOwn.call(target, rootKey)) {\n                if (!create) return undefined;\n                Object.defineProperty(target, rootKey, { value: HashMap.create() });\n            }\n            return target[rootKey];\n        }\n        function FillRandomBytes(buffer, size) {\n            for (var i = 0; i < size; ++i) buffer[i] = Math.random() * 0xff | 0;\n            return buffer;\n        }\n        function GenRandomBytes(size) {\n            if (typeof Uint8Array === \"function\") {\n                if (typeof crypto !== \"undefined\") return crypto.getRandomValues(new Uint8Array(size));\n                if (typeof msCrypto !== \"undefined\") return msCrypto.getRandomValues(new Uint8Array(size));\n                return FillRandomBytes(new Uint8Array(size), size);\n            }\n            return FillRandomBytes(new Array(size), size);\n        }\n        function CreateUUID() {\n            var data = GenRandomBytes(UUID_SIZE);\n            // mark as random - RFC 4122 § 4.4\n            data[6] = data[6] & 0x4f | 0x40;\n            data[8] = data[8] & 0xbf | 0x80;\n            var result = \"\";\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                var byte = data[offset];\n                if (offset === 4 || offset === 6 || offset === 8) result += \"-\";\n                if (byte < 16) result += \"0\";\n                result += byte.toString(16).toLowerCase();\n            }\n            return result;\n        }\n    }\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n    function MakeDictionary(obj) {\n        obj.__ = undefined;\n        delete obj.__;\n        return obj;\n    }\n    // patch global Reflect\n    (function (__global) {\n        if (typeof __global.Reflect !== \"undefined\") {\n            if (__global.Reflect !== Reflect) {\n                for (var p in Reflect) {\n                    if (hasOwn.call(Reflect, p)) {\n                        __global.Reflect[p] = Reflect[p];\n                    }\n                }\n            }\n        } else {\n            __global.Reflect = Reflect;\n        }\n    })(typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : Function(\"return this;\")());\n})(Reflect || (Reflect = {}));\n//# sourceMappingURL=Reflect.js.map"
    },
    {
      "id": 18,
      "identifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\webpack\\buildin\\global.js",
      "name": "(webpack)/buildin/global.js",
      "index": 7,
      "index2": 2,
      "size": 487,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
      "issuerId": 17,
      "issuerName": "./~/reflect-metadata/Reflect.js",
      "profile": {
        "factory": 106,
        "building": 103
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 17,
          "moduleIdentifier": "G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\babel-loader\\lib\\index.js!G:\\Coding\\Git\\Repos\\ScriptPlayer\\ScriptPlayer\\ScriptPlayer.WebPlayer\\node_modules\\reflect-metadata\\Reflect.js",
          "module": "./~/reflect-metadata/Reflect.js",
          "moduleName": "./~/reflect-metadata/Reflect.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-41"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "depth": 4,
      "source": "var g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;"
    }
  ],
  "filteredModules": 0,
  "children": []
}
